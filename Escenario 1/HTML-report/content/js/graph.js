/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 184596.0, "series": [{"data": [[0.0, 580.0], [0.1, 600.0], [0.2, 619.0], [0.3, 619.0], [0.4, 627.0], [0.5, 697.0], [0.6, 1609.0], [0.7, 1683.0], [0.8, 2326.0], [0.9, 6945.0], [1.0, 7255.0], [1.1, 8528.0], [1.2, 9516.0], [1.3, 10679.0], [1.4, 10679.0], [1.5, 13464.0], [1.6, 17580.0], [1.7, 18403.0], [1.8, 21794.0], [1.9, 23104.0], [2.0, 28128.0], [2.1, 28181.0], [2.2, 28201.0], [2.3, 28211.0], [2.4, 28236.0], [2.5, 28241.0], [2.6, 28247.0], [2.7, 28301.0], [2.8, 28361.0], [2.9, 28814.0], [3.0, 32359.0], [3.1, 32463.0], [3.2, 32521.0], [3.3, 32536.0], [3.4, 32543.0], [3.5, 32548.0], [3.6, 32564.0], [3.7, 32585.0], [3.8, 32609.0], [3.9, 32636.0], [4.0, 32643.0], [4.1, 32647.0], [4.2, 32654.0], [4.3, 32681.0], [4.4, 32703.0], [4.5, 32703.0], [4.6, 32714.0], [4.7, 32775.0], [4.8, 32790.0], [4.9, 32813.0], [5.0, 32817.0], [5.1, 32819.0], [5.2, 32857.0], [5.3, 32867.0], [5.4, 32868.0], [5.5, 32872.0], [5.6, 32882.0], [5.7, 32903.0], [5.8, 32906.0], [5.9, 32912.0], [6.0, 32920.0], [6.1, 32928.0], [6.2, 32928.0], [6.3, 32944.0], [6.4, 32960.0], [6.5, 32976.0], [6.6, 32996.0], [6.7, 33003.0], [6.8, 33018.0], [6.9, 33019.0], [7.0, 33048.0], [7.1, 33048.0], [7.2, 33048.0], [7.3, 33054.0], [7.4, 33144.0], [7.5, 33145.0], [7.6, 33176.0], [7.7, 33196.0], [7.8, 33199.0], [7.9, 33200.0], [8.0, 33215.0], [8.1, 33237.0], [8.2, 33257.0], [8.3, 33287.0], [8.4, 33317.0], [8.5, 33335.0], [8.6, 33373.0], [8.7, 33374.0], [8.8, 33383.0], [8.9, 33466.0], [9.0, 33495.0], [9.1, 33635.0], [9.2, 33684.0], [9.3, 33759.0], [9.4, 33782.0], [9.5, 33788.0], [9.6, 33799.0], [9.7, 33848.0], [9.8, 33907.0], [9.9, 34010.0], [10.0, 34044.0], [10.1, 34184.0], [10.2, 34484.0], [10.3, 34559.0], [10.4, 34639.0], [10.5, 35000.0], [10.6, 35100.0], [10.7, 35119.0], [10.8, 35220.0], [10.9, 36263.0], [11.0, 36278.0], [11.1, 36337.0], [11.2, 36388.0], [11.3, 36400.0], [11.4, 36460.0], [11.5, 36519.0], [11.6, 36597.0], [11.7, 36675.0], [11.8, 36720.0], [11.9, 36846.0], [12.0, 36904.0], [12.1, 37316.0], [12.2, 37330.0], [12.3, 37417.0], [12.4, 37440.0], [12.5, 37442.0], [12.6, 37560.0], [12.7, 37572.0], [12.8, 38638.0], [12.9, 38639.0], [13.0, 38699.0], [13.1, 38750.0], [13.2, 38785.0], [13.3, 38834.0], [13.4, 38845.0], [13.5, 39191.0], [13.6, 39445.0], [13.7, 39741.0], [13.8, 39781.0], [13.9, 39995.0], [14.0, 40062.0], [14.1, 40133.0], [14.2, 40164.0], [14.3, 40232.0], [14.4, 40259.0], [14.5, 40287.0], [14.6, 40379.0], [14.7, 40413.0], [14.8, 40473.0], [14.9, 40662.0], [15.0, 40838.0], [15.1, 41459.0], [15.2, 42241.0], [15.3, 42821.0], [15.4, 43022.0], [15.5, 43669.0], [15.6, 44015.0], [15.7, 44543.0], [15.8, 44994.0], [15.9, 45004.0], [16.0, 45055.0], [16.1, 45695.0], [16.2, 46153.0], [16.3, 47154.0], [16.4, 47200.0], [16.5, 47205.0], [16.6, 47340.0], [16.7, 47407.0], [16.8, 47477.0], [16.9, 48241.0], [17.0, 48364.0], [17.1, 50808.0], [17.2, 51901.0], [17.3, 53538.0], [17.4, 54897.0], [17.5, 55187.0], [17.6, 55616.0], [17.7, 55905.0], [17.8, 55915.0], [17.9, 56024.0], [18.0, 56084.0], [18.1, 56103.0], [18.2, 56343.0], [18.3, 56463.0], [18.4, 57409.0], [18.5, 57915.0], [18.6, 57971.0], [18.7, 59915.0], [18.8, 60060.0], [18.9, 60060.0], [19.0, 60128.0], [19.1, 60563.0], [19.2, 61220.0], [19.3, 61230.0], [19.4, 61317.0], [19.5, 61328.0], [19.6, 61469.0], [19.7, 61495.0], [19.8, 61537.0], [19.9, 61571.0], [20.0, 61597.0], [20.1, 61750.0], [20.2, 61794.0], [20.3, 61811.0], [20.4, 61816.0], [20.5, 61872.0], [20.6, 61991.0], [20.7, 62065.0], [20.8, 62092.0], [20.9, 62093.0], [21.0, 62110.0], [21.1, 62125.0], [21.2, 62182.0], [21.3, 62186.0], [21.4, 62324.0], [21.5, 62334.0], [21.6, 62362.0], [21.7, 62411.0], [21.8, 62468.0], [21.9, 62479.0], [22.0, 62523.0], [22.1, 62530.0], [22.2, 62593.0], [22.3, 62659.0], [22.4, 62690.0], [22.5, 62715.0], [22.6, 62801.0], [22.7, 62820.0], [22.8, 62822.0], [22.9, 62839.0], [23.0, 62863.0], [23.1, 62898.0], [23.2, 62934.0], [23.3, 62980.0], [23.4, 62989.0], [23.5, 62998.0], [23.6, 63017.0], [23.7, 63020.0], [23.8, 63032.0], [23.9, 63040.0], [24.0, 63059.0], [24.1, 63064.0], [24.2, 63069.0], [24.3, 63071.0], [24.4, 63072.0], [24.5, 63073.0], [24.6, 63074.0], [24.7, 63075.0], [24.8, 63076.0], [24.9, 63077.0], [25.0, 63079.0], [25.1, 63079.0], [25.2, 63079.0], [25.3, 63079.0], [25.4, 63079.0], [25.5, 63079.0], [25.6, 63080.0], [25.7, 63080.0], [25.8, 63080.0], [25.9, 63080.0], [26.0, 63080.0], [26.1, 63081.0], [26.2, 63081.0], [26.3, 63081.0], [26.4, 63081.0], [26.5, 63081.0], [26.6, 63082.0], [26.7, 63082.0], [26.8, 63082.0], [26.9, 63083.0], [27.0, 63083.0], [27.1, 63083.0], [27.2, 63083.0], [27.3, 63083.0], [27.4, 63083.0], [27.5, 63083.0], [27.6, 63083.0], [27.7, 63083.0], [27.8, 63083.0], [27.9, 63083.0], [28.0, 63084.0], [28.1, 63084.0], [28.2, 63084.0], [28.3, 63084.0], [28.4, 63085.0], [28.5, 63085.0], [28.6, 63085.0], [28.7, 63085.0], [28.8, 63085.0], [28.9, 63086.0], [29.0, 63086.0], [29.1, 63087.0], [29.2, 63087.0], [29.3, 63087.0], [29.4, 63087.0], [29.5, 63088.0], [29.6, 63088.0], [29.7, 63088.0], [29.8, 63088.0], [29.9, 63088.0], [30.0, 63088.0], [30.1, 63088.0], [30.2, 63089.0], [30.3, 63089.0], [30.4, 63089.0], [30.5, 63089.0], [30.6, 63089.0], [30.7, 63089.0], [30.8, 63089.0], [30.9, 63090.0], [31.0, 63090.0], [31.1, 63090.0], [31.2, 63090.0], [31.3, 63091.0], [31.4, 63091.0], [31.5, 63091.0], [31.6, 63091.0], [31.7, 63091.0], [31.8, 63091.0], [31.9, 63092.0], [32.0, 63092.0], [32.1, 63092.0], [32.2, 63092.0], [32.3, 63092.0], [32.4, 63092.0], [32.5, 63092.0], [32.6, 63092.0], [32.7, 63092.0], [32.8, 63093.0], [32.9, 63093.0], [33.0, 63093.0], [33.1, 63093.0], [33.2, 63094.0], [33.3, 63094.0], [33.4, 63094.0], [33.5, 63094.0], [33.6, 63094.0], [33.7, 63094.0], [33.8, 63094.0], [33.9, 63094.0], [34.0, 63094.0], [34.1, 63094.0], [34.2, 63094.0], [34.3, 63094.0], [34.4, 63094.0], [34.5, 63095.0], [34.6, 63095.0], [34.7, 63095.0], [34.8, 63095.0], [34.9, 63095.0], [35.0, 63095.0], [35.1, 63095.0], [35.2, 63095.0], [35.3, 63095.0], [35.4, 63095.0], [35.5, 63095.0], [35.6, 63095.0], [35.7, 63096.0], [35.8, 63096.0], [35.9, 63096.0], [36.0, 63096.0], [36.1, 63096.0], [36.2, 63096.0], [36.3, 63096.0], [36.4, 63096.0], [36.5, 63096.0], [36.6, 63096.0], [36.7, 63096.0], [36.8, 63096.0], [36.9, 63097.0], [37.0, 63097.0], [37.1, 63097.0], [37.2, 63097.0], [37.3, 63097.0], [37.4, 63097.0], [37.5, 63097.0], [37.6, 63097.0], [37.7, 63097.0], [37.8, 63098.0], [37.9, 63098.0], [38.0, 63098.0], [38.1, 63098.0], [38.2, 63098.0], [38.3, 63098.0], [38.4, 63098.0], [38.5, 63098.0], [38.6, 63098.0], [38.7, 63098.0], [38.8, 63099.0], [38.9, 63099.0], [39.0, 63099.0], [39.1, 63099.0], [39.2, 63099.0], [39.3, 63099.0], [39.4, 63099.0], [39.5, 63100.0], [39.6, 63100.0], [39.7, 63100.0], [39.8, 63100.0], [39.9, 63100.0], [40.0, 63100.0], [40.1, 63100.0], [40.2, 63100.0], [40.3, 63100.0], [40.4, 63100.0], [40.5, 63100.0], [40.6, 63100.0], [40.7, 63100.0], [40.8, 63100.0], [40.9, 63101.0], [41.0, 63101.0], [41.1, 63101.0], [41.2, 63101.0], [41.3, 63101.0], [41.4, 63101.0], [41.5, 63101.0], [41.6, 63101.0], [41.7, 63101.0], [41.8, 63101.0], [41.9, 63101.0], [42.0, 63101.0], [42.1, 63101.0], [42.2, 63101.0], [42.3, 63102.0], [42.4, 63102.0], [42.5, 63102.0], [42.6, 63102.0], [42.7, 63102.0], [42.8, 63102.0], [42.9, 63102.0], [43.0, 63102.0], [43.1, 63102.0], [43.2, 63102.0], [43.3, 63102.0], [43.4, 63102.0], [43.5, 63103.0], [43.6, 63103.0], [43.7, 63103.0], [43.8, 63103.0], [43.9, 63103.0], [44.0, 63103.0], [44.1, 63103.0], [44.2, 63103.0], [44.3, 63103.0], [44.4, 63104.0], [44.5, 63104.0], [44.6, 63104.0], [44.7, 63104.0], [44.8, 63105.0], [44.9, 63105.0], [45.0, 63105.0], [45.1, 63105.0], [45.2, 63105.0], [45.3, 63105.0], [45.4, 63105.0], [45.5, 63105.0], [45.6, 63105.0], [45.7, 63106.0], [45.8, 63106.0], [45.9, 63106.0], [46.0, 63106.0], [46.1, 63106.0], [46.2, 63106.0], [46.3, 63106.0], [46.4, 63106.0], [46.5, 63106.0], [46.6, 63106.0], [46.7, 63106.0], [46.8, 63106.0], [46.9, 63106.0], [47.0, 63106.0], [47.1, 63106.0], [47.2, 63107.0], [47.3, 63107.0], [47.4, 63107.0], [47.5, 63107.0], [47.6, 63107.0], [47.7, 63107.0], [47.8, 63107.0], [47.9, 63107.0], [48.0, 63107.0], [48.1, 63107.0], [48.2, 63107.0], [48.3, 63107.0], [48.4, 63108.0], [48.5, 63108.0], [48.6, 63108.0], [48.7, 63108.0], [48.8, 63108.0], [48.9, 63108.0], [49.0, 63108.0], [49.1, 63108.0], [49.2, 63108.0], [49.3, 63108.0], [49.4, 63109.0], [49.5, 63109.0], [49.6, 63109.0], [49.7, 63109.0], [49.8, 63109.0], [49.9, 63109.0], [50.0, 63109.0], [50.1, 63109.0], [50.2, 63110.0], [50.3, 63110.0], [50.4, 63110.0], [50.5, 63110.0], [50.6, 63110.0], [50.7, 63110.0], [50.8, 63110.0], [50.9, 63110.0], [51.0, 63111.0], [51.1, 63111.0], [51.2, 63111.0], [51.3, 63111.0], [51.4, 63111.0], [51.5, 63111.0], [51.6, 63111.0], [51.7, 63111.0], [51.8, 63111.0], [51.9, 63111.0], [52.0, 63111.0], [52.1, 63111.0], [52.2, 63112.0], [52.3, 63112.0], [52.4, 63112.0], [52.5, 63112.0], [52.6, 63112.0], [52.7, 63112.0], [52.8, 63112.0], [52.9, 63112.0], [53.0, 63112.0], [53.1, 63112.0], [53.2, 63112.0], [53.3, 63112.0], [53.4, 63112.0], [53.5, 63113.0], [53.6, 63113.0], [53.7, 63113.0], [53.8, 63113.0], [53.9, 63113.0], [54.0, 63113.0], [54.1, 63113.0], [54.2, 63113.0], [54.3, 63113.0], [54.4, 63113.0], [54.5, 63113.0], [54.6, 63114.0], [54.7, 63114.0], [54.8, 63114.0], [54.9, 63114.0], [55.0, 63114.0], [55.1, 63114.0], [55.2, 63114.0], [55.3, 63115.0], [55.4, 63115.0], [55.5, 63115.0], [55.6, 63115.0], [55.7, 63115.0], [55.8, 63115.0], [55.9, 63115.0], [56.0, 63115.0], [56.1, 63115.0], [56.2, 63115.0], [56.3, 63115.0], [56.4, 63115.0], [56.5, 63115.0], [56.6, 63115.0], [56.7, 63115.0], [56.8, 63115.0], [56.9, 63115.0], [57.0, 63115.0], [57.1, 63115.0], [57.2, 63116.0], [57.3, 63116.0], [57.4, 63116.0], [57.5, 63116.0], [57.6, 63116.0], [57.7, 63116.0], [57.8, 63116.0], [57.9, 63116.0], [58.0, 63117.0], [58.1, 63117.0], [58.2, 63117.0], [58.3, 63117.0], [58.4, 63117.0], [58.5, 63117.0], [58.6, 63117.0], [58.7, 63117.0], [58.8, 63117.0], [58.9, 63117.0], [59.0, 63118.0], [59.1, 63118.0], [59.2, 63118.0], [59.3, 63118.0], [59.4, 63118.0], [59.5, 63118.0], [59.6, 63118.0], [59.7, 63118.0], [59.8, 63118.0], [59.9, 63118.0], [60.0, 63119.0], [60.1, 63119.0], [60.2, 63119.0], [60.3, 63119.0], [60.4, 63119.0], [60.5, 63119.0], [60.6, 63119.0], [60.7, 63119.0], [60.8, 63119.0], [60.9, 63120.0], [61.0, 63120.0], [61.1, 63120.0], [61.2, 63120.0], [61.3, 63120.0], [61.4, 63120.0], [61.5, 63120.0], [61.6, 63121.0], [61.7, 63121.0], [61.8, 63121.0], [61.9, 63121.0], [62.0, 63121.0], [62.1, 63121.0], [62.2, 63121.0], [62.3, 63121.0], [62.4, 63121.0], [62.5, 63121.0], [62.6, 63121.0], [62.7, 63122.0], [62.8, 63122.0], [62.9, 63122.0], [63.0, 63122.0], [63.1, 63122.0], [63.2, 63122.0], [63.3, 63122.0], [63.4, 63122.0], [63.5, 63122.0], [63.6, 63122.0], [63.7, 63122.0], [63.8, 63123.0], [63.9, 63123.0], [64.0, 63123.0], [64.1, 63123.0], [64.2, 63123.0], [64.3, 63124.0], [64.4, 63124.0], [64.5, 63124.0], [64.6, 63124.0], [64.7, 63124.0], [64.8, 63124.0], [64.9, 63124.0], [65.0, 63125.0], [65.1, 63125.0], [65.2, 63125.0], [65.3, 63125.0], [65.4, 63125.0], [65.5, 63126.0], [65.6, 63126.0], [65.7, 63126.0], [65.8, 63126.0], [65.9, 63126.0], [66.0, 63126.0], [66.1, 63126.0], [66.2, 63127.0], [66.3, 63127.0], [66.4, 63127.0], [66.5, 63127.0], [66.6, 63128.0], [66.7, 63128.0], [66.8, 63128.0], [66.9, 63128.0], [67.0, 63128.0], [67.1, 63128.0], [67.2, 63128.0], [67.3, 63128.0], [67.4, 63128.0], [67.5, 63128.0], [67.6, 63129.0], [67.7, 63129.0], [67.8, 63130.0], [67.9, 63130.0], [68.0, 63130.0], [68.1, 63130.0], [68.2, 63130.0], [68.3, 63130.0], [68.4, 63130.0], [68.5, 63131.0], [68.6, 63131.0], [68.7, 63131.0], [68.8, 63131.0], [68.9, 63131.0], [69.0, 63132.0], [69.1, 63132.0], [69.2, 63132.0], [69.3, 63132.0], [69.4, 63132.0], [69.5, 63132.0], [69.6, 63132.0], [69.7, 63133.0], [69.8, 63133.0], [69.9, 63133.0], [70.0, 63134.0], [70.1, 63134.0], [70.2, 63134.0], [70.3, 63134.0], [70.4, 63134.0], [70.5, 63134.0], [70.6, 63135.0], [70.7, 63135.0], [70.8, 63135.0], [70.9, 63135.0], [71.0, 63135.0], [71.1, 63135.0], [71.2, 63135.0], [71.3, 63135.0], [71.4, 63135.0], [71.5, 63135.0], [71.6, 63135.0], [71.7, 63136.0], [71.8, 63136.0], [71.9, 63136.0], [72.0, 63136.0], [72.1, 63136.0], [72.2, 63136.0], [72.3, 63136.0], [72.4, 63136.0], [72.5, 63137.0], [72.6, 63137.0], [72.7, 63138.0], [72.8, 63138.0], [72.9, 63138.0], [73.0, 63138.0], [73.1, 63138.0], [73.2, 63138.0], [73.3, 63139.0], [73.4, 63140.0], [73.5, 63140.0], [73.6, 63140.0], [73.7, 63140.0], [73.8, 63140.0], [73.9, 63140.0], [74.0, 63141.0], [74.1, 63141.0], [74.2, 63142.0], [74.3, 63142.0], [74.4, 63142.0], [74.5, 63143.0], [74.6, 63143.0], [74.7, 63146.0], [74.8, 63146.0], [74.9, 63148.0], [75.0, 63150.0], [75.1, 63150.0], [75.2, 63150.0], [75.3, 63150.0], [75.4, 63150.0], [75.5, 63152.0], [75.6, 63153.0], [75.7, 63155.0], [75.8, 63157.0], [75.9, 63157.0], [76.0, 63159.0], [76.1, 63162.0], [76.2, 63175.0], [76.3, 63176.0], [76.4, 63187.0], [76.5, 63197.0], [76.6, 63229.0], [76.7, 63231.0], [76.8, 63233.0], [76.9, 63242.0], [77.0, 63289.0], [77.1, 63296.0], [77.2, 63348.0], [77.3, 63352.0], [77.4, 63372.0], [77.5, 63401.0], [77.6, 63428.0], [77.7, 63459.0], [77.8, 63509.0], [77.9, 63531.0], [78.0, 63607.0], [78.1, 63610.0], [78.2, 63635.0], [78.3, 63670.0], [78.4, 63691.0], [78.5, 63696.0], [78.6, 63709.0], [78.7, 63712.0], [78.8, 63721.0], [78.9, 63728.0], [79.0, 63752.0], [79.1, 63756.0], [79.2, 63851.0], [79.3, 63857.0], [79.4, 63865.0], [79.5, 63909.0], [79.6, 63925.0], [79.7, 63932.0], [79.8, 63985.0], [79.9, 64015.0], [80.0, 64031.0], [80.1, 64044.0], [80.2, 64044.0], [80.3, 64054.0], [80.4, 64070.0], [80.5, 64091.0], [80.6, 64098.0], [80.7, 64129.0], [80.8, 64131.0], [80.9, 64164.0], [81.0, 64168.0], [81.1, 64176.0], [81.2, 64199.0], [81.3, 64215.0], [81.4, 64222.0], [81.5, 64270.0], [81.6, 64344.0], [81.7, 64396.0], [81.8, 64457.0], [81.9, 64524.0], [82.0, 64579.0], [82.1, 64623.0], [82.2, 64741.0], [82.3, 66761.0], [82.4, 66984.0], [82.5, 67012.0], [82.6, 67062.0], [82.7, 67187.0], [82.8, 67199.0], [82.9, 67379.0], [83.0, 67415.0], [83.1, 67427.0], [83.2, 67489.0], [83.3, 67549.0], [83.4, 70805.0], [83.5, 70865.0], [83.6, 70925.0], [83.7, 70985.0], [83.8, 71010.0], [83.9, 71010.0], [84.0, 71045.0], [84.1, 71053.0], [84.2, 71112.0], [84.3, 71113.0], [84.4, 71173.0], [84.5, 71181.0], [84.6, 71244.0], [84.7, 71499.0], [84.8, 71518.0], [84.9, 71535.0], [85.0, 71669.0], [85.1, 71777.0], [85.2, 72036.0], [85.3, 72156.0], [85.4, 73071.0], [85.5, 73962.0], [85.6, 73968.0], [85.7, 73998.0], [85.8, 74053.0], [85.9, 74117.0], [86.0, 74164.0], [86.1, 74183.0], [86.2, 74235.0], [86.3, 74242.0], [86.4, 74293.0], [86.5, 74337.0], [86.6, 74352.0], [86.7, 74416.0], [86.8, 74476.0], [86.9, 74523.0], [87.0, 74577.0], [87.1, 74579.0], [87.2, 74598.0], [87.3, 74639.0], [87.4, 74678.0], [87.5, 74687.0], [87.6, 74700.0], [87.7, 74755.0], [87.8, 74756.0], [87.9, 74798.0], [88.0, 74823.0], [88.1, 74885.0], [88.2, 74914.0], [88.3, 74934.0], [88.4, 74973.0], [88.5, 75066.0], [88.6, 75110.0], [88.7, 75126.0], [88.8, 75157.0], [88.9, 75186.0], [89.0, 75204.0], [89.1, 75208.0], [89.2, 75218.0], [89.3, 75227.0], [89.4, 75253.0], [89.5, 75296.0], [89.6, 75320.0], [89.7, 75322.0], [89.8, 75342.0], [89.9, 75370.0], [90.0, 75381.0], [90.1, 75388.0], [90.2, 75434.0], [90.3, 75460.0], [90.4, 75581.0], [90.5, 75672.0], [90.6, 75692.0], [90.7, 75695.0], [90.8, 75715.0], [90.9, 75783.0], [91.0, 75828.0], [91.1, 75835.0], [91.2, 75895.0], [91.3, 76247.0], [91.4, 76260.0], [91.5, 76380.0], [91.6, 76560.0], [91.7, 76688.0], [91.8, 76920.0], [91.9, 89361.0], [92.0, 89420.0], [92.1, 89475.0], [92.2, 89524.0], [92.3, 89601.0], [92.4, 89619.0], [92.5, 89661.0], [92.6, 89679.0], [92.7, 89702.0], [92.8, 89721.0], [92.9, 89738.0], [93.0, 89792.0], [93.1, 89847.0], [93.2, 89851.0], [93.3, 89906.0], [93.4, 89911.0], [93.5, 90155.0], [93.6, 91356.0], [93.7, 91391.0], [93.8, 91399.0], [93.9, 91491.0], [94.0, 91537.0], [94.1, 91551.0], [94.2, 91572.0], [94.3, 91581.0], [94.4, 91595.0], [94.5, 91606.0], [94.6, 91640.0], [94.7, 91642.0], [94.8, 91664.0], [94.9, 91668.0], [95.0, 91676.0], [95.1, 91701.0], [95.2, 91729.0], [95.3, 91736.0], [95.4, 91787.0], [95.5, 91874.0], [95.6, 93881.0], [95.7, 94106.0], [95.8, 94977.0], [95.9, 95775.0], [96.0, 95798.0], [96.1, 95817.0], [96.2, 95846.0], [96.3, 95953.0], [96.4, 97898.0], [96.5, 97957.0], [96.6, 98017.0], [96.7, 98790.0], [96.8, 98815.0], [96.9, 98875.0], [97.0, 98888.0], [97.1, 98910.0], [97.2, 98969.0], [97.3, 98998.0], [97.4, 99043.0], [97.5, 99065.0], [97.6, 99119.0], [97.7, 99178.0], [97.8, 99191.0], [97.9, 99246.0], [98.0, 99738.0], [98.1, 101387.0], [98.2, 101523.0], [98.3, 101821.0], [98.4, 102149.0], [98.5, 102174.0], [98.6, 102265.0], [98.7, 102594.0], [98.8, 103138.0], [98.9, 103475.0], [99.0, 103504.0], [99.1, 104015.0], [99.2, 104239.0], [99.3, 104612.0], [99.4, 124723.0], [99.5, 126602.0], [99.6, 127419.0], [99.7, 129647.0], [99.8, 129880.0], [99.9, 130493.0]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[0.0, 348.0], [0.1, 348.0], [0.2, 348.0], [0.3, 348.0], [0.4, 348.0], [0.5, 348.0], [0.6, 348.0], [0.7, 348.0], [0.8, 348.0], [0.9, 348.0], [1.0, 515.0], [1.1, 515.0], [1.2, 515.0], [1.3, 515.0], [1.4, 515.0], [1.5, 515.0], [1.6, 515.0], [1.7, 515.0], [1.8, 515.0], [1.9, 515.0], [2.0, 564.0], [2.1, 564.0], [2.2, 564.0], [2.3, 564.0], [2.4, 564.0], [2.5, 564.0], [2.6, 564.0], [2.7, 564.0], [2.8, 564.0], [2.9, 564.0], [3.0, 762.0], [3.1, 762.0], [3.2, 762.0], [3.3, 762.0], [3.4, 762.0], [3.5, 762.0], [3.6, 762.0], [3.7, 762.0], [3.8, 762.0], [3.9, 762.0], [4.0, 1844.0], [4.1, 1844.0], [4.2, 1844.0], [4.3, 1844.0], [4.4, 1844.0], [4.5, 1844.0], [4.6, 1844.0], [4.7, 1844.0], [4.8, 1844.0], [4.9, 1844.0], [5.0, 1897.0], [5.1, 1897.0], [5.2, 1897.0], [5.3, 1897.0], [5.4, 1897.0], [5.5, 1897.0], [5.6, 1897.0], [5.7, 1897.0], [5.8, 1897.0], [5.9, 1897.0], [6.0, 2170.0], [6.1, 2170.0], [6.2, 2170.0], [6.3, 2170.0], [6.4, 2170.0], [6.5, 2170.0], [6.6, 2170.0], [6.7, 2170.0], [6.8, 2170.0], [6.9, 2170.0], [7.0, 3231.0], [7.1, 3231.0], [7.2, 3231.0], [7.3, 3231.0], [7.4, 3231.0], [7.5, 3231.0], [7.6, 3231.0], [7.7, 3231.0], [7.8, 3231.0], [7.9, 3231.0], [8.0, 3680.0], [8.1, 3680.0], [8.2, 3680.0], [8.3, 3680.0], [8.4, 3680.0], [8.5, 3680.0], [8.6, 3680.0], [8.7, 3680.0], [8.8, 3680.0], [8.9, 3680.0], [9.0, 6291.0], [9.1, 6291.0], [9.2, 6291.0], [9.3, 6291.0], [9.4, 6291.0], [9.5, 6291.0], [9.6, 6291.0], [9.7, 6291.0], [9.8, 6291.0], [9.9, 6291.0], [10.0, 6343.0], [10.1, 6343.0], [10.2, 6343.0], [10.3, 6343.0], [10.4, 6343.0], [10.5, 6343.0], [10.6, 6343.0], [10.7, 6343.0], [10.8, 6343.0], [10.9, 6343.0], [11.0, 6966.0], [11.1, 6966.0], [11.2, 6966.0], [11.3, 6966.0], [11.4, 6966.0], [11.5, 6966.0], [11.6, 6966.0], [11.7, 6966.0], [11.8, 6966.0], [11.9, 6966.0], [12.0, 7058.0], [12.1, 7058.0], [12.2, 7058.0], [12.3, 7058.0], [12.4, 7058.0], [12.5, 7058.0], [12.6, 7058.0], [12.7, 7058.0], [12.8, 7058.0], [12.9, 7058.0], [13.0, 7430.0], [13.1, 7430.0], [13.2, 7430.0], [13.3, 7430.0], [13.4, 7430.0], [13.5, 7430.0], [13.6, 7430.0], [13.7, 7430.0], [13.8, 7430.0], [13.9, 7430.0], [14.0, 7814.0], [14.1, 7814.0], [14.2, 7814.0], [14.3, 7814.0], [14.4, 7814.0], [14.5, 7814.0], [14.6, 7814.0], [14.7, 7814.0], [14.8, 7814.0], [14.9, 7814.0], [15.0, 8152.0], [15.1, 8152.0], [15.2, 8152.0], [15.3, 8152.0], [15.4, 8152.0], [15.5, 8152.0], [15.6, 8152.0], [15.7, 8152.0], [15.8, 8152.0], [15.9, 8152.0], [16.0, 8642.0], [16.1, 8642.0], [16.2, 8642.0], [16.3, 8642.0], [16.4, 8642.0], [16.5, 8642.0], [16.6, 8642.0], [16.7, 8642.0], [16.8, 8642.0], [16.9, 8642.0], [17.0, 9168.0], [17.1, 9168.0], [17.2, 9168.0], [17.3, 9168.0], [17.4, 9168.0], [17.5, 9168.0], [17.6, 9168.0], [17.7, 9168.0], [17.8, 9168.0], [17.9, 9168.0], [18.0, 9781.0], [18.1, 9781.0], [18.2, 9781.0], [18.3, 9781.0], [18.4, 9781.0], [18.5, 9781.0], [18.6, 9781.0], [18.7, 9781.0], [18.8, 9781.0], [18.9, 9781.0], [19.0, 13165.0], [19.1, 13165.0], [19.2, 13165.0], [19.3, 13165.0], [19.4, 13165.0], [19.5, 13165.0], [19.6, 13165.0], [19.7, 13165.0], [19.8, 13165.0], [19.9, 13165.0], [20.0, 16543.0], [20.1, 16543.0], [20.2, 16543.0], [20.3, 16543.0], [20.4, 16543.0], [20.5, 16543.0], [20.6, 16543.0], [20.7, 16543.0], [20.8, 16543.0], [20.9, 16543.0], [21.0, 16916.0], [21.1, 16916.0], [21.2, 16916.0], [21.3, 16916.0], [21.4, 16916.0], [21.5, 16916.0], [21.6, 16916.0], [21.7, 16916.0], [21.8, 16916.0], [21.9, 16916.0], [22.0, 17239.0], [22.1, 17239.0], [22.2, 17239.0], [22.3, 17239.0], [22.4, 17239.0], [22.5, 17239.0], [22.6, 17239.0], [22.7, 17239.0], [22.8, 17239.0], [22.9, 17239.0], [23.0, 17291.0], [23.1, 17291.0], [23.2, 17291.0], [23.3, 17291.0], [23.4, 17291.0], [23.5, 17291.0], [23.6, 17291.0], [23.7, 17291.0], [23.8, 17291.0], [23.9, 17291.0], [24.0, 18075.0], [24.1, 18075.0], [24.2, 18075.0], [24.3, 18075.0], [24.4, 18075.0], [24.5, 18075.0], [24.6, 18075.0], [24.7, 18075.0], [24.8, 18075.0], [24.9, 18075.0], [25.0, 19899.0], [25.1, 19899.0], [25.2, 19899.0], [25.3, 19899.0], [25.4, 19899.0], [25.5, 19899.0], [25.6, 19899.0], [25.7, 19899.0], [25.8, 19899.0], [25.9, 19899.0], [26.0, 20088.0], [26.1, 20088.0], [26.2, 20088.0], [26.3, 20088.0], [26.4, 20088.0], [26.5, 20088.0], [26.6, 20088.0], [26.7, 20088.0], [26.8, 20088.0], [26.9, 20088.0], [27.0, 20645.0], [27.1, 20645.0], [27.2, 20645.0], [27.3, 20645.0], [27.4, 20645.0], [27.5, 20645.0], [27.6, 20645.0], [27.7, 20645.0], [27.8, 20645.0], [27.9, 20645.0], [28.0, 20709.0], [28.1, 20709.0], [28.2, 20709.0], [28.3, 20709.0], [28.4, 20709.0], [28.5, 20709.0], [28.6, 20709.0], [28.7, 20709.0], [28.8, 20709.0], [28.9, 20709.0], [29.0, 21945.0], [29.1, 21945.0], [29.2, 21945.0], [29.3, 21945.0], [29.4, 21945.0], [29.5, 21945.0], [29.6, 21945.0], [29.7, 21945.0], [29.8, 21945.0], [29.9, 21945.0], [30.0, 22729.0], [30.1, 22729.0], [30.2, 22729.0], [30.3, 22729.0], [30.4, 22729.0], [30.5, 22729.0], [30.6, 22729.0], [30.7, 22729.0], [30.8, 22729.0], [30.9, 22729.0], [31.0, 23779.0], [31.1, 23779.0], [31.2, 23779.0], [31.3, 23779.0], [31.4, 23779.0], [31.5, 23779.0], [31.6, 23779.0], [31.7, 23779.0], [31.8, 23779.0], [31.9, 23779.0], [32.0, 26897.0], [32.1, 26897.0], [32.2, 26897.0], [32.3, 26897.0], [32.4, 26897.0], [32.5, 26897.0], [32.6, 26897.0], [32.7, 26897.0], [32.8, 26897.0], [32.9, 26897.0], [33.0, 30632.0], [33.1, 30632.0], [33.2, 30632.0], [33.3, 30632.0], [33.4, 30632.0], [33.5, 30632.0], [33.6, 30632.0], [33.7, 30632.0], [33.8, 30632.0], [33.9, 30632.0], [34.0, 33373.0], [34.1, 33373.0], [34.2, 33373.0], [34.3, 33373.0], [34.4, 33373.0], [34.5, 33373.0], [34.6, 33373.0], [34.7, 33373.0], [34.8, 33373.0], [34.9, 33373.0], [35.0, 33670.0], [35.1, 33670.0], [35.2, 33670.0], [35.3, 33670.0], [35.4, 33670.0], [35.5, 33670.0], [35.6, 33670.0], [35.7, 33670.0], [35.8, 33670.0], [35.9, 33670.0], [36.0, 34198.0], [36.1, 34198.0], [36.2, 34198.0], [36.3, 34198.0], [36.4, 34198.0], [36.5, 34198.0], [36.6, 34198.0], [36.7, 34198.0], [36.8, 34198.0], [36.9, 34198.0], [37.0, 34223.0], [37.1, 34223.0], [37.2, 34223.0], [37.3, 34223.0], [37.4, 34223.0], [37.5, 34223.0], [37.6, 34223.0], [37.7, 34223.0], [37.8, 34223.0], [37.9, 34223.0], [38.0, 34533.0], [38.1, 34533.0], [38.2, 34533.0], [38.3, 34533.0], [38.4, 34533.0], [38.5, 34533.0], [38.6, 34533.0], [38.7, 34533.0], [38.8, 34533.0], [38.9, 34533.0], [39.0, 36366.0], [39.1, 36366.0], [39.2, 36366.0], [39.3, 36366.0], [39.4, 36366.0], [39.5, 36366.0], [39.6, 36366.0], [39.7, 36366.0], [39.8, 36366.0], [39.9, 36366.0], [40.0, 38023.0], [40.1, 38023.0], [40.2, 38023.0], [40.3, 38023.0], [40.4, 38023.0], [40.5, 38023.0], [40.6, 38023.0], [40.7, 38023.0], [40.8, 38023.0], [40.9, 38023.0], [41.0, 38069.0], [41.1, 38069.0], [41.2, 38069.0], [41.3, 38069.0], [41.4, 38069.0], [41.5, 38069.0], [41.6, 38069.0], [41.7, 38069.0], [41.8, 38069.0], [41.9, 38069.0], [42.0, 38133.0], [42.1, 38133.0], [42.2, 38133.0], [42.3, 38133.0], [42.4, 38133.0], [42.5, 38133.0], [42.6, 38133.0], [42.7, 38133.0], [42.8, 38133.0], [42.9, 38133.0], [43.0, 39950.0], [43.1, 39950.0], [43.2, 39950.0], [43.3, 39950.0], [43.4, 39950.0], [43.5, 39950.0], [43.6, 39950.0], [43.7, 39950.0], [43.8, 39950.0], [43.9, 39950.0], [44.0, 41347.0], [44.1, 41347.0], [44.2, 41347.0], [44.3, 41347.0], [44.4, 41347.0], [44.5, 41347.0], [44.6, 41347.0], [44.7, 41347.0], [44.8, 41347.0], [44.9, 41347.0], [45.0, 44387.0], [45.1, 44387.0], [45.2, 44387.0], [45.3, 44387.0], [45.4, 44387.0], [45.5, 44387.0], [45.6, 44387.0], [45.7, 44387.0], [45.8, 44387.0], [45.9, 44387.0], [46.0, 45571.0], [46.1, 45571.0], [46.2, 45571.0], [46.3, 45571.0], [46.4, 45571.0], [46.5, 45571.0], [46.6, 45571.0], [46.7, 45571.0], [46.8, 45571.0], [46.9, 45571.0], [47.0, 46132.0], [47.1, 46132.0], [47.2, 46132.0], [47.3, 46132.0], [47.4, 46132.0], [47.5, 46132.0], [47.6, 46132.0], [47.7, 46132.0], [47.8, 46132.0], [47.9, 46132.0], [48.0, 58645.0], [48.1, 58645.0], [48.2, 58645.0], [48.3, 58645.0], [48.4, 58645.0], [48.5, 58645.0], [48.6, 58645.0], [48.7, 58645.0], [48.8, 58645.0], [48.9, 58645.0], [49.0, 61131.0], [49.1, 61131.0], [49.2, 61131.0], [49.3, 61131.0], [49.4, 61131.0], [49.5, 61131.0], [49.6, 61131.0], [49.7, 61131.0], [49.8, 61131.0], [49.9, 61131.0], [50.0, 61257.0], [50.1, 61257.0], [50.2, 61257.0], [50.3, 61257.0], [50.4, 61257.0], [50.5, 61257.0], [50.6, 61257.0], [50.7, 61257.0], [50.8, 61257.0], [50.9, 61257.0], [51.0, 63639.0], [51.1, 63639.0], [51.2, 63639.0], [51.3, 63639.0], [51.4, 63639.0], [51.5, 63639.0], [51.6, 63639.0], [51.7, 63639.0], [51.8, 63639.0], [51.9, 63639.0], [52.0, 63871.0], [52.1, 63871.0], [52.2, 63871.0], [52.3, 63871.0], [52.4, 63871.0], [52.5, 63871.0], [52.6, 63871.0], [52.7, 63871.0], [52.8, 63871.0], [52.9, 63871.0], [53.0, 64003.0], [53.1, 64003.0], [53.2, 64003.0], [53.3, 64003.0], [53.4, 64003.0], [53.5, 64003.0], [53.6, 64003.0], [53.7, 64003.0], [53.8, 64003.0], [53.9, 64003.0], [54.0, 64634.0], [54.1, 64634.0], [54.2, 64634.0], [54.3, 64634.0], [54.4, 64634.0], [54.5, 64634.0], [54.6, 64634.0], [54.7, 64634.0], [54.8, 64634.0], [54.9, 64634.0], [55.0, 65851.0], [55.1, 65851.0], [55.2, 65851.0], [55.3, 65851.0], [55.4, 65851.0], [55.5, 65851.0], [55.6, 65851.0], [55.7, 65851.0], [55.8, 65851.0], [55.9, 65851.0], [56.0, 65895.0], [56.1, 65895.0], [56.2, 65895.0], [56.3, 65895.0], [56.4, 65895.0], [56.5, 65895.0], [56.6, 65895.0], [56.7, 65895.0], [56.8, 65895.0], [56.9, 65895.0], [57.0, 66521.0], [57.1, 66521.0], [57.2, 66521.0], [57.3, 66521.0], [57.4, 66521.0], [57.5, 66521.0], [57.6, 66521.0], [57.7, 66521.0], [57.8, 66521.0], [57.9, 66521.0], [58.0, 71266.0], [58.1, 71266.0], [58.2, 71266.0], [58.3, 71266.0], [58.4, 71266.0], [58.5, 71266.0], [58.6, 71266.0], [58.7, 71266.0], [58.8, 71266.0], [58.9, 71266.0], [59.0, 71851.0], [59.1, 71851.0], [59.2, 71851.0], [59.3, 71851.0], [59.4, 71851.0], [59.5, 71851.0], [59.6, 71851.0], [59.7, 71851.0], [59.8, 71851.0], [59.9, 71851.0], [60.0, 72211.0], [60.1, 72211.0], [60.2, 72211.0], [60.3, 72211.0], [60.4, 72211.0], [60.5, 72211.0], [60.6, 72211.0], [60.7, 72211.0], [60.8, 72211.0], [60.9, 72211.0], [61.0, 72386.0], [61.1, 72386.0], [61.2, 72386.0], [61.3, 72386.0], [61.4, 72386.0], [61.5, 72386.0], [61.6, 72386.0], [61.7, 72386.0], [61.8, 72386.0], [61.9, 72386.0], [62.0, 75212.0], [62.1, 75212.0], [62.2, 75212.0], [62.3, 75212.0], [62.4, 75212.0], [62.5, 75212.0], [62.6, 75212.0], [62.7, 75212.0], [62.8, 75212.0], [62.9, 75212.0], [63.0, 75219.0], [63.1, 75219.0], [63.2, 75219.0], [63.3, 75219.0], [63.4, 75219.0], [63.5, 75219.0], [63.6, 75219.0], [63.7, 75219.0], [63.8, 75219.0], [63.9, 75219.0], [64.0, 75259.0], [64.1, 75259.0], [64.2, 75259.0], [64.3, 75259.0], [64.4, 75259.0], [64.5, 75259.0], [64.6, 75259.0], [64.7, 75259.0], [64.8, 75259.0], [64.9, 75259.0], [65.0, 75280.0], [65.1, 75280.0], [65.2, 75280.0], [65.3, 75280.0], [65.4, 75280.0], [65.5, 75280.0], [65.6, 75280.0], [65.7, 75280.0], [65.8, 75280.0], [65.9, 75280.0], [66.0, 77428.0], [66.1, 77428.0], [66.2, 77428.0], [66.3, 77428.0], [66.4, 77428.0], [66.5, 77428.0], [66.6, 77428.0], [66.7, 77428.0], [66.8, 77428.0], [66.9, 77428.0], [67.0, 78933.0], [67.1, 78933.0], [67.2, 78933.0], [67.3, 78933.0], [67.4, 78933.0], [67.5, 78933.0], [67.6, 78933.0], [67.7, 78933.0], [67.8, 78933.0], [67.9, 78933.0], [68.0, 82811.0], [68.1, 82811.0], [68.2, 82811.0], [68.3, 82811.0], [68.4, 82811.0], [68.5, 82811.0], [68.6, 82811.0], [68.7, 82811.0], [68.8, 82811.0], [68.9, 82811.0], [69.0, 84904.0], [69.1, 84904.0], [69.2, 84904.0], [69.3, 84904.0], [69.4, 84904.0], [69.5, 84904.0], [69.6, 84904.0], [69.7, 84904.0], [69.8, 84904.0], [69.9, 84904.0], [70.0, 92664.0], [70.1, 92664.0], [70.2, 92664.0], [70.3, 92664.0], [70.4, 92664.0], [70.5, 92664.0], [70.6, 92664.0], [70.7, 92664.0], [70.8, 92664.0], [70.9, 92664.0], [71.0, 94595.0], [71.1, 94595.0], [71.2, 94595.0], [71.3, 94595.0], [71.4, 94595.0], [71.5, 94595.0], [71.6, 94595.0], [71.7, 94595.0], [71.8, 94595.0], [71.9, 94595.0], [72.0, 113058.0], [72.1, 113058.0], [72.2, 113058.0], [72.3, 113058.0], [72.4, 113058.0], [72.5, 113058.0], [72.6, 113058.0], [72.7, 113058.0], [72.8, 113058.0], [72.9, 113058.0], [73.0, 115048.0], [73.1, 115048.0], [73.2, 115048.0], [73.3, 115048.0], [73.4, 115048.0], [73.5, 115048.0], [73.6, 115048.0], [73.7, 115048.0], [73.8, 115048.0], [73.9, 115048.0], [74.0, 118414.0], [74.1, 118414.0], [74.2, 118414.0], [74.3, 118414.0], [74.4, 118414.0], [74.5, 118414.0], [74.6, 118414.0], [74.7, 118414.0], [74.8, 118414.0], [74.9, 118414.0], [75.0, 121997.0], [75.1, 121997.0], [75.2, 121997.0], [75.3, 121997.0], [75.4, 121997.0], [75.5, 121997.0], [75.6, 121997.0], [75.7, 121997.0], [75.8, 121997.0], [75.9, 121997.0], [76.0, 123372.0], [76.1, 123372.0], [76.2, 123372.0], [76.3, 123372.0], [76.4, 123372.0], [76.5, 123372.0], [76.6, 123372.0], [76.7, 123372.0], [76.8, 123372.0], [76.9, 123372.0], [77.0, 136957.0], [77.1, 136957.0], [77.2, 136957.0], [77.3, 136957.0], [77.4, 136957.0], [77.5, 136957.0], [77.6, 136957.0], [77.7, 136957.0], [77.8, 136957.0], [77.9, 136957.0], [78.0, 139764.0], [78.1, 139764.0], [78.2, 139764.0], [78.3, 139764.0], [78.4, 139764.0], [78.5, 139764.0], [78.6, 139764.0], [78.7, 139764.0], [78.8, 139764.0], [78.9, 139764.0], [79.0, 140558.0], [79.1, 140558.0], [79.2, 140558.0], [79.3, 140558.0], [79.4, 140558.0], [79.5, 140558.0], [79.6, 140558.0], [79.7, 140558.0], [79.8, 140558.0], [79.9, 140558.0], [80.0, 152711.0], [80.1, 152711.0], [80.2, 152711.0], [80.3, 152711.0], [80.4, 152711.0], [80.5, 152711.0], [80.6, 152711.0], [80.7, 152711.0], [80.8, 152711.0], [80.9, 152711.0], [81.0, 154637.0], [81.1, 154637.0], [81.2, 154637.0], [81.3, 154637.0], [81.4, 154637.0], [81.5, 154637.0], [81.6, 154637.0], [81.7, 154637.0], [81.8, 154637.0], [81.9, 154637.0], [82.0, 163217.0], [82.1, 163217.0], [82.2, 163217.0], [82.3, 163217.0], [82.4, 163217.0], [82.5, 163217.0], [82.6, 163217.0], [82.7, 163217.0], [82.8, 163217.0], [82.9, 163217.0], [83.0, 163234.0], [83.1, 163234.0], [83.2, 163234.0], [83.3, 163234.0], [83.4, 163234.0], [83.5, 163234.0], [83.6, 163234.0], [83.7, 163234.0], [83.8, 163234.0], [83.9, 163234.0], [84.0, 164245.0], [84.1, 164245.0], [84.2, 164245.0], [84.3, 164245.0], [84.4, 164245.0], [84.5, 164245.0], [84.6, 164245.0], [84.7, 164245.0], [84.8, 164245.0], [84.9, 164245.0], [85.0, 164283.0], [85.1, 164283.0], [85.2, 164283.0], [85.3, 164283.0], [85.4, 164283.0], [85.5, 164283.0], [85.6, 164283.0], [85.7, 164283.0], [85.8, 164283.0], [85.9, 164283.0], [86.0, 164431.0], [86.1, 164431.0], [86.2, 164431.0], [86.3, 164431.0], [86.4, 164431.0], [86.5, 164431.0], [86.6, 164431.0], [86.7, 164431.0], [86.8, 164431.0], [86.9, 164431.0], [87.0, 166258.0], [87.1, 166258.0], [87.2, 166258.0], [87.3, 166258.0], [87.4, 166258.0], [87.5, 166258.0], [87.6, 166258.0], [87.7, 166258.0], [87.8, 166258.0], [87.9, 166258.0], [88.0, 166840.0], [88.1, 166840.0], [88.2, 166840.0], [88.3, 166840.0], [88.4, 166840.0], [88.5, 166840.0], [88.6, 166840.0], [88.7, 166840.0], [88.8, 166840.0], [88.9, 166840.0], [89.0, 178009.0], [89.1, 178009.0], [89.2, 178009.0], [89.3, 178009.0], [89.4, 178009.0], [89.5, 178009.0], [89.6, 178009.0], [89.7, 178009.0], [89.8, 178009.0], [89.9, 178009.0], [90.0, 181440.0], [90.1, 181440.0], [90.2, 181440.0], [90.3, 181440.0], [90.4, 181440.0], [90.5, 181440.0], [90.6, 181440.0], [90.7, 181440.0], [90.8, 181440.0], [90.9, 181440.0], [91.0, 181565.0], [91.1, 181565.0], [91.2, 181565.0], [91.3, 181565.0], [91.4, 181565.0], [91.5, 181565.0], [91.6, 181565.0], [91.7, 181565.0], [91.8, 181565.0], [91.9, 181565.0], [92.0, 182863.0], [92.1, 182863.0], [92.2, 182863.0], [92.3, 182863.0], [92.4, 182863.0], [92.5, 182863.0], [92.6, 182863.0], [92.7, 182863.0], [92.8, 182863.0], [92.9, 182863.0], [93.0, 182942.0], [93.1, 182942.0], [93.2, 182942.0], [93.3, 182942.0], [93.4, 182942.0], [93.5, 182942.0], [93.6, 182942.0], [93.7, 182942.0], [93.8, 182942.0], [93.9, 182942.0], [94.0, 183147.0], [94.1, 183147.0], [94.2, 183147.0], [94.3, 183147.0], [94.4, 183147.0], [94.5, 183147.0], [94.6, 183147.0], [94.7, 183147.0], [94.8, 183147.0], [94.9, 183147.0], [95.0, 183214.0], [95.1, 183214.0], [95.2, 183214.0], [95.3, 183214.0], [95.4, 183214.0], [95.5, 183214.0], [95.6, 183214.0], [95.7, 183214.0], [95.8, 183214.0], [95.9, 183214.0], [96.0, 183970.0], [96.1, 183970.0], [96.2, 183970.0], [96.3, 183970.0], [96.4, 183970.0], [96.5, 183970.0], [96.6, 183970.0], [96.7, 183970.0], [96.8, 183970.0], [96.9, 183970.0], [97.0, 184242.0], [97.1, 184242.0], [97.2, 184242.0], [97.3, 184242.0], [97.4, 184242.0], [97.5, 184242.0], [97.6, 184242.0], [97.7, 184242.0], [97.8, 184242.0], [97.9, 184242.0], [98.0, 184325.0], [98.1, 184325.0], [98.2, 184325.0], [98.3, 184325.0], [98.4, 184325.0], [98.5, 184325.0], [98.6, 184325.0], [98.7, 184325.0], [98.8, 184325.0], [98.9, 184325.0], [99.0, 184596.0], [99.1, 184596.0], [99.2, 184596.0], [99.3, 184596.0], [99.4, 184596.0], [99.5, 184596.0], [99.6, 184596.0], [99.7, 184596.0], [99.8, 184596.0], [99.9, 184596.0]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 17.0], [21.1, 97.0], [21.2, 97.0], [21.3, 145.0], [21.4, 223.0], [21.5, 286.0], [21.6, 293.0], [21.7, 398.0], [21.8, 461.0], [21.9, 544.0], [22.0, 592.0], [22.1, 599.0], [22.2, 670.0], [22.3, 718.0], [22.4, 786.0], [22.5, 820.0], [22.6, 851.0], [22.7, 906.0], [22.8, 953.0], [22.9, 1016.0], [23.0, 1080.0], [23.1, 1134.0], [23.2, 1160.0], [23.3, 1222.0], [23.4, 1286.0], [23.5, 1385.0], [23.6, 1400.0], [23.7, 1433.0], [23.8, 1498.0], [23.9, 1609.0], [24.0, 1658.0], [24.1, 1722.0], [24.2, 1786.0], [24.3, 1795.0], [24.4, 1826.0], [24.5, 1850.0], [24.6, 1895.0], [24.7, 1977.0], [24.8, 2040.0], [24.9, 2087.0], [25.0, 2183.0], [25.1, 2214.0], [25.2, 2252.0], [25.3, 2278.0], [25.4, 2310.0], [25.5, 2389.0], [25.6, 2467.0], [25.7, 2514.0], [25.8, 2577.0], [25.9, 2640.0], [26.0, 2688.0], [26.1, 2768.0], [26.2, 2815.0], [26.3, 2857.0], [26.4, 2880.0], [26.5, 2880.0], [26.6, 2880.0], [26.7, 3086.0], [26.8, 3116.0], [26.9, 3181.0], [27.0, 3251.0], [27.1, 3261.0], [27.2, 3324.0], [27.3, 3362.0], [27.4, 3362.0], [27.5, 3370.0], [27.6, 3394.0], [27.7, 3418.0], [27.8, 3481.0], [27.9, 3544.0], [28.0, 3592.0], [28.1, 3640.0], [28.2, 3703.0], [28.3, 3782.0], [28.4, 3814.0], [28.5, 3893.0], [28.6, 3893.0], [28.7, 3919.0], [28.8, 3931.0], [28.9, 3991.0], [29.0, 4086.0], [29.1, 4114.0], [29.2, 4170.0], [29.3, 4182.0], [29.4, 4230.0], [29.5, 4292.0], [29.6, 4340.0], [29.7, 4426.0], [29.8, 4436.0], [29.9, 4445.0], [30.0, 4547.0], [30.1, 4611.0], [30.2, 4643.0], [30.3, 4723.0], [30.4, 4753.0], [30.5, 4819.0], [30.6, 4899.0], [30.7, 4952.0], [30.8, 5025.0], [30.9, 5075.0], [31.0, 5137.0], [31.1, 5217.0], [31.2, 5264.0], [31.3, 5328.0], [31.4, 5391.0], [31.5, 5450.0], [31.6, 5450.0], [31.7, 5564.0], [31.8, 5644.0], [31.9, 5692.0], [32.0, 5757.0], [32.1, 5789.0], [32.2, 5869.0], [32.3, 5947.0], [32.4, 5964.0], [32.5, 6074.0], [32.6, 6121.0], [32.7, 6135.0], [32.8, 6153.0], [32.9, 6249.0], [33.0, 6297.0], [33.1, 6361.0], [33.2, 6409.0], [33.3, 6458.0], [33.4, 6552.0], [33.5, 6678.0], [33.6, 6744.0], [33.7, 6759.0], [33.8, 6823.0], [33.9, 6869.0], [34.0, 6869.0], [34.1, 6886.0], [34.2, 6934.0], [34.3, 6971.0], [34.4, 7074.0], [34.5, 7105.0], [34.6, 7138.0], [34.7, 7186.0], [34.8, 7234.0], [34.9, 7264.0], [35.0, 7264.0], [35.1, 7265.0], [35.2, 7295.0], [35.3, 7296.0], [35.4, 7296.0], [35.5, 7297.0], [35.6, 7311.0], [35.7, 7344.0], [35.8, 7346.0], [35.9, 7441.0], [36.0, 7487.0], [36.1, 7551.0], [36.2, 7617.0], [36.3, 7681.0], [36.4, 7761.0], [36.5, 7781.0], [36.6, 7781.0], [36.7, 7790.0], [36.8, 7854.0], [36.9, 7919.0], [37.0, 7993.0], [37.1, 7993.0], [37.2, 8108.0], [37.3, 8187.0], [37.4, 8251.0], [37.5, 8282.0], [37.6, 8330.0], [37.7, 8361.0], [37.8, 8378.0], [37.9, 8490.0], [38.0, 8496.0], [38.1, 8602.0], [38.2, 8649.0], [38.3, 8655.0], [38.4, 8713.0], [38.5, 8775.0], [38.6, 8817.0], [38.7, 8818.0], [38.8, 8818.0], [38.9, 8825.0], [39.0, 8889.0], [39.1, 8953.0], [39.2, 9000.0], [39.3, 9010.0], [39.4, 9111.0], [39.5, 9239.0], [39.6, 9301.0], [39.7, 9365.0], [39.8, 9413.0], [39.9, 9478.0], [40.0, 9530.0], [40.1, 9606.0], [40.2, 9669.0], [40.3, 9733.0], [40.4, 9780.0], [40.5, 9842.0], [40.6, 9888.0], [40.7, 9952.0], [40.8, 10000.0], [40.9, 10048.0], [41.0, 10141.0], [41.1, 10219.0], [41.2, 10283.0], [41.3, 10314.0], [41.4, 10377.0], [41.5, 10396.0], [41.6, 10425.0], [41.7, 10503.0], [41.8, 10531.0], [41.9, 10614.0], [42.0, 10685.0], [42.1, 10709.0], [42.2, 10732.0], [42.3, 10757.0], [42.4, 10758.0], [42.5, 10822.0], [42.6, 10823.0], [42.7, 10837.0], [42.8, 10862.0], [42.9, 10914.0], [43.0, 10917.0], [43.1, 10981.0], [43.2, 10994.0], [43.3, 11036.0], [43.4, 11044.0], [43.5, 11044.0], [43.6, 11053.0], [43.7, 11102.0], [43.8, 11135.0], [43.9, 11140.0], [44.0, 11168.0], [44.1, 11169.0], [44.2, 11175.0], [44.3, 11188.0], [44.4, 11394.0], [44.5, 42554.0], [44.6, 63065.0], [44.7, 63067.0], [44.8, 63069.0], [44.9, 63070.0], [45.0, 63073.0], [45.1, 63074.0], [45.2, 63075.0], [45.3, 63075.0], [45.4, 63077.0], [45.5, 63077.0], [45.6, 63077.0], [45.7, 63078.0], [45.8, 63079.0], [45.9, 63080.0], [46.0, 63080.0], [46.1, 63080.0], [46.2, 63080.0], [46.3, 63080.0], [46.4, 63080.0], [46.5, 63081.0], [46.6, 63081.0], [46.7, 63081.0], [46.8, 63082.0], [46.9, 63083.0], [47.0, 63084.0], [47.1, 63084.0], [47.2, 63084.0], [47.3, 63085.0], [47.4, 63085.0], [47.5, 63087.0], [47.6, 63088.0], [47.7, 63088.0], [47.8, 63088.0], [47.9, 63089.0], [48.0, 63089.0], [48.1, 63089.0], [48.2, 63089.0], [48.3, 63090.0], [48.4, 63090.0], [48.5, 63091.0], [48.6, 63092.0], [48.7, 63092.0], [48.8, 63092.0], [48.9, 63092.0], [49.0, 63092.0], [49.1, 63092.0], [49.2, 63092.0], [49.3, 63092.0], [49.4, 63092.0], [49.5, 63092.0], [49.6, 63092.0], [49.7, 63092.0], [49.8, 63092.0], [49.9, 63092.0], [50.0, 63092.0], [50.1, 63093.0], [50.2, 63093.0], [50.3, 63094.0], [50.4, 63094.0], [50.5, 63094.0], [50.6, 63094.0], [50.7, 63095.0], [50.8, 63095.0], [50.9, 63095.0], [51.0, 63096.0], [51.1, 63096.0], [51.2, 63096.0], [51.3, 63096.0], [51.4, 63096.0], [51.5, 63096.0], [51.6, 63097.0], [51.7, 63097.0], [51.8, 63097.0], [51.9, 63097.0], [52.0, 63097.0], [52.1, 63097.0], [52.2, 63098.0], [52.3, 63098.0], [52.4, 63098.0], [52.5, 63098.0], [52.6, 63098.0], [52.7, 63098.0], [52.8, 63098.0], [52.9, 63098.0], [53.0, 63098.0], [53.1, 63098.0], [53.2, 63098.0], [53.3, 63099.0], [53.4, 63099.0], [53.5, 63100.0], [53.6, 63100.0], [53.7, 63100.0], [53.8, 63100.0], [53.9, 63100.0], [54.0, 63100.0], [54.1, 63100.0], [54.2, 63100.0], [54.3, 63100.0], [54.4, 63100.0], [54.5, 63100.0], [54.6, 63100.0], [54.7, 63101.0], [54.8, 63101.0], [54.9, 63101.0], [55.0, 63101.0], [55.1, 63101.0], [55.2, 63101.0], [55.3, 63102.0], [55.4, 63102.0], [55.5, 63102.0], [55.6, 63102.0], [55.7, 63102.0], [55.8, 63102.0], [55.9, 63102.0], [56.0, 63102.0], [56.1, 63102.0], [56.2, 63102.0], [56.3, 63102.0], [56.4, 63102.0], [56.5, 63102.0], [56.6, 63102.0], [56.7, 63102.0], [56.8, 63102.0], [56.9, 63102.0], [57.0, 63103.0], [57.1, 63103.0], [57.2, 63103.0], [57.3, 63103.0], [57.4, 63103.0], [57.5, 63103.0], [57.6, 63103.0], [57.7, 63104.0], [57.8, 63104.0], [57.9, 63104.0], [58.0, 63104.0], [58.1, 63104.0], [58.2, 63104.0], [58.3, 63105.0], [58.4, 63105.0], [58.5, 63105.0], [58.6, 63105.0], [58.7, 63106.0], [58.8, 63106.0], [58.9, 63106.0], [59.0, 63106.0], [59.1, 63106.0], [59.2, 63106.0], [59.3, 63106.0], [59.4, 63106.0], [59.5, 63107.0], [59.6, 63108.0], [59.7, 63108.0], [59.8, 63108.0], [59.9, 63108.0], [60.0, 63109.0], [60.1, 63109.0], [60.2, 63109.0], [60.3, 63109.0], [60.4, 63109.0], [60.5, 63110.0], [60.6, 63110.0], [60.7, 63110.0], [60.8, 63110.0], [60.9, 63110.0], [61.0, 63110.0], [61.1, 63110.0], [61.2, 63110.0], [61.3, 63110.0], [61.4, 63110.0], [61.5, 63111.0], [61.6, 63111.0], [61.7, 63111.0], [61.8, 63111.0], [61.9, 63111.0], [62.0, 63111.0], [62.1, 63111.0], [62.2, 63111.0], [62.3, 63111.0], [62.4, 63111.0], [62.5, 63111.0], [62.6, 63111.0], [62.7, 63112.0], [62.8, 63112.0], [62.9, 63112.0], [63.0, 63112.0], [63.1, 63112.0], [63.2, 63113.0], [63.3, 63113.0], [63.4, 63113.0], [63.5, 63113.0], [63.6, 63113.0], [63.7, 63113.0], [63.8, 63113.0], [63.9, 63113.0], [64.0, 63113.0], [64.1, 63113.0], [64.2, 63114.0], [64.3, 63114.0], [64.4, 63114.0], [64.5, 63114.0], [64.6, 63114.0], [64.7, 63114.0], [64.8, 63114.0], [64.9, 63115.0], [65.0, 63115.0], [65.1, 63115.0], [65.2, 63115.0], [65.3, 63115.0], [65.4, 63115.0], [65.5, 63116.0], [65.6, 63116.0], [65.7, 63116.0], [65.8, 63116.0], [65.9, 63116.0], [66.0, 63116.0], [66.1, 63116.0], [66.2, 63116.0], [66.3, 63116.0], [66.4, 63117.0], [66.5, 63118.0], [66.6, 63118.0], [66.7, 63118.0], [66.8, 63118.0], [66.9, 63118.0], [67.0, 63118.0], [67.1, 63119.0], [67.2, 63119.0], [67.3, 63119.0], [67.4, 63119.0], [67.5, 63119.0], [67.6, 63119.0], [67.7, 63119.0], [67.8, 63119.0], [67.9, 63119.0], [68.0, 63119.0], [68.1, 63120.0], [68.2, 63120.0], [68.3, 63120.0], [68.4, 63120.0], [68.5, 63120.0], [68.6, 63120.0], [68.7, 63120.0], [68.8, 63120.0], [68.9, 63120.0], [69.0, 63120.0], [69.1, 63120.0], [69.2, 63120.0], [69.3, 63120.0], [69.4, 63121.0], [69.5, 63121.0], [69.6, 63121.0], [69.7, 63121.0], [69.8, 63121.0], [69.9, 63121.0], [70.0, 63121.0], [70.1, 63122.0], [70.2, 63122.0], [70.3, 63122.0], [70.4, 63122.0], [70.5, 63122.0], [70.6, 63122.0], [70.7, 63122.0], [70.8, 63122.0], [70.9, 63122.0], [71.0, 63122.0], [71.1, 63122.0], [71.2, 63122.0], [71.3, 63122.0], [71.4, 63122.0], [71.5, 63122.0], [71.6, 63122.0], [71.7, 63122.0], [71.8, 63123.0], [71.9, 63123.0], [72.0, 63123.0], [72.1, 63123.0], [72.2, 63123.0], [72.3, 63123.0], [72.4, 63123.0], [72.5, 63123.0], [72.6, 63123.0], [72.7, 63123.0], [72.8, 63123.0], [72.9, 63123.0], [73.0, 63123.0], [73.1, 63123.0], [73.2, 63124.0], [73.3, 63124.0], [73.4, 63124.0], [73.5, 63124.0], [73.6, 63124.0], [73.7, 63124.0], [73.8, 63124.0], [73.9, 63124.0], [74.0, 63124.0], [74.1, 63124.0], [74.2, 63124.0], [74.3, 63124.0], [74.4, 63124.0], [74.5, 63125.0], [74.6, 63125.0], [74.7, 63125.0], [74.8, 63125.0], [74.9, 63125.0], [75.0, 63125.0], [75.1, 63125.0], [75.2, 63126.0], [75.3, 63126.0], [75.4, 63126.0], [75.5, 63126.0], [75.6, 63126.0], [75.7, 63127.0], [75.8, 63128.0], [75.9, 63128.0], [76.0, 63128.0], [76.1, 63128.0], [76.2, 63128.0], [76.3, 63129.0], [76.4, 63129.0], [76.5, 63129.0], [76.6, 63130.0], [76.7, 63130.0], [76.8, 63130.0], [76.9, 63130.0], [77.0, 63130.0], [77.1, 63130.0], [77.2, 63130.0], [77.3, 63130.0], [77.4, 63131.0], [77.5, 63131.0], [77.6, 63131.0], [77.7, 63131.0], [77.8, 63132.0], [77.9, 63132.0], [78.0, 63132.0], [78.1, 63133.0], [78.2, 63133.0], [78.3, 63133.0], [78.4, 63133.0], [78.5, 63133.0], [78.6, 63134.0], [78.7, 63134.0], [78.8, 63134.0], [78.9, 63134.0], [79.0, 63134.0], [79.1, 63134.0], [79.2, 63135.0], [79.3, 63135.0], [79.4, 63135.0], [79.5, 63135.0], [79.6, 63135.0], [79.7, 63136.0], [79.8, 63136.0], [79.9, 63139.0], [80.0, 63139.0], [80.1, 63139.0], [80.2, 63141.0], [80.3, 63142.0], [80.4, 63142.0], [80.5, 63142.0], [80.6, 63142.0], [80.7, 63142.0], [80.8, 63145.0], [80.9, 63145.0], [81.0, 63147.0], [81.1, 63148.0], [81.2, 63150.0], [81.3, 63156.0], [81.4, 63156.0], [81.5, 63165.0], [81.6, 63166.0], [81.7, 63199.0], [81.8, 64893.0], [81.9, 74125.0], [82.0, 86924.0], [82.1, 93158.0], [82.2, 96937.0], [82.3, 98604.0], [82.4, 113681.0], [82.5, 114519.0], [82.6, 117705.0], [82.7, 117903.0], [82.8, 118036.0], [82.9, 118204.0], [83.0, 118718.0], [83.1, 118947.0], [83.2, 119532.0], [83.3, 119611.0], [83.4, 119856.0], [83.5, 120076.0], [83.6, 120095.0], [83.7, 120249.0], [83.8, 120634.0], [83.9, 121278.0], [84.0, 122017.0], [84.1, 122863.0], [84.2, 124053.0], [84.3, 124327.0], [84.4, 124726.0], [84.5, 124857.0], [84.6, 125334.0], [84.7, 125614.0], [84.8, 125863.0], [84.9, 125865.0], [85.0, 125874.0], [85.1, 125896.0], [85.2, 125926.0], [85.3, 126141.0], [85.4, 127237.0], [85.5, 127362.0], [85.6, 127727.0], [85.7, 127934.0], [85.8, 127953.0], [85.9, 128115.0], [86.0, 128204.0], [86.1, 128340.0], [86.2, 128364.0], [86.3, 128429.0], [86.4, 128858.0], [86.5, 128998.0], [86.6, 129107.0], [86.7, 129616.0], [86.8, 129937.0], [86.9, 130008.0], [87.0, 130118.0], [87.1, 130174.0], [87.2, 130214.0], [87.3, 130228.0], [87.4, 130241.0], [87.5, 130278.0], [87.6, 130558.0], [87.7, 130681.0], [87.8, 130729.0], [87.9, 130921.0], [88.0, 130923.0], [88.1, 130957.0], [88.2, 131019.0], [88.3, 131169.0], [88.4, 131256.0], [88.5, 131449.0], [88.6, 131467.0], [88.7, 131785.0], [88.8, 131790.0], [88.9, 131816.0], [89.0, 131926.0], [89.1, 131928.0], [89.2, 132117.0], [89.3, 132136.0], [89.4, 132137.0], [89.5, 132143.0], [89.6, 132420.0], [89.7, 132579.0], [89.8, 132627.0], [89.9, 132803.0], [90.0, 132935.0], [90.1, 133060.0], [90.2, 133091.0], [90.3, 133121.0], [90.4, 133156.0], [90.5, 133164.0], [90.6, 133208.0], [90.7, 133234.0], [90.8, 133236.0], [90.9, 133290.0], [91.0, 133549.0], [91.1, 133589.0], [91.2, 133655.0], [91.3, 134100.0], [91.4, 134762.0], [91.5, 134779.0], [91.6, 135236.0], [91.7, 135278.0], [91.8, 135292.0], [91.9, 135312.0], [92.0, 135332.0], [92.1, 135351.0], [92.2, 135376.0], [92.3, 135415.0], [92.4, 135437.0], [92.5, 135444.0], [92.6, 135474.0], [92.7, 135494.0], [92.8, 135500.0], [92.9, 135505.0], [93.0, 135514.0], [93.1, 135563.0], [93.2, 135565.0], [93.3, 135572.0], [93.4, 135598.0], [93.5, 135679.0], [93.6, 135706.0], [93.7, 135763.0], [93.8, 135780.0], [93.9, 135841.0], [94.0, 135842.0], [94.1, 135996.0], [94.2, 136014.0], [94.3, 136083.0], [94.4, 136090.0], [94.5, 136229.0], [94.6, 136640.0], [94.7, 136643.0], [94.8, 136644.0], [94.9, 136673.0], [95.0, 136734.0], [95.1, 136840.0], [95.2, 136902.0], [95.3, 136906.0], [95.4, 136961.0], [95.5, 137021.0], [95.6, 137076.0], [95.7, 137140.0], [95.8, 137166.0], [95.9, 137193.0], [96.0, 137201.0], [96.1, 137237.0], [96.2, 137485.0], [96.3, 137489.0], [96.4, 137524.0], [96.5, 137557.0], [96.6, 142362.0], [96.7, 142404.0], [96.8, 144222.0], [96.9, 147486.0], [97.0, 147488.0], [97.1, 147501.0], [97.2, 147509.0], [97.3, 147510.0], [97.4, 147514.0], [97.5, 147543.0], [97.6, 147561.0], [97.7, 147684.0], [97.8, 147703.0], [97.9, 147709.0], [98.0, 147768.0], [98.1, 147973.0], [98.2, 148072.0], [98.3, 148404.0], [98.4, 148453.0], [98.5, 148518.0], [98.6, 148549.0], [98.7, 148633.0], [98.8, 149818.0], [98.9, 150279.0], [99.0, 151655.0], [99.1, 155541.0], [99.2, 155755.0], [99.3, 158654.0], [99.4, 163936.0], [99.5, 166742.0], [99.6, 173676.0], [99.7, 174676.0], [99.8, 182088.0], [99.9, 182273.0]], "isOverall": false, "label": "suggestion products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 371.0, "series": [{"data": [[66700.0, 1.0], [67500.0, 1.0], [71500.0, 2.0], [74700.0, 4.0], [75500.0, 1.0], [76300.0, 1.0], [73900.0, 3.0], [89900.0, 2.0], [91500.0, 5.0], [97900.0, 1.0], [98700.0, 1.0], [103500.0, 1.0], [33700.0, 4.0], [34100.0, 1.0], [33300.0, 5.0], [32900.0, 10.0], [34500.0, 1.0], [36500.0, 2.0], [36900.0, 1.0], [37300.0, 2.0], [39700.0, 2.0], [40100.0, 2.0], [44500.0, 1.0], [44900.0, 1.0], [46100.0, 1.0], [47300.0, 1.0], [56100.0, 1.0], [60100.0, 1.0], [60500.0, 1.0], [61300.0, 2.0], [62900.0, 4.0], [62500.0, 3.0], [63300.0, 3.0], [62100.0, 4.0], [61700.0, 2.0], [64100.0, 6.0], [63700.0, 6.0], [64500.0, 2.0], [67400.0, 3.0], [71400.0, 1.0], [73000.0, 1.0], [74600.0, 3.0], [75400.0, 2.0], [76200.0, 2.0], [89800.0, 2.0], [91400.0, 1.0], [93800.0, 1.0], [97800.0, 1.0], [101800.0, 1.0], [103400.0, 1.0], [104200.0, 1.0], [126600.0, 1.0], [500.0, 1.0], [129800.0, 1.0], [127400.0, 1.0], [600.0, 5.0], [1600.0, 2.0], [2300.0, 1.0], [67300.0, 1.0], [72100.0, 1.0], [74500.0, 4.0], [75300.0, 6.0], [76900.0, 1.0], [89700.0, 4.0], [91300.0, 3.0], [102500.0, 1.0], [6900.0, 1.0], [7200.0, 1.0], [8500.0, 1.0], [9500.0, 1.0], [10600.0, 1.0], [13400.0, 1.0], [18400.0, 1.0], [28200.0, 5.0], [28800.0, 1.0], [32600.0, 6.0], [32400.0, 1.0], [34000.0, 2.0], [33200.0, 5.0], [33600.0, 2.0], [32800.0, 8.0], [34400.0, 1.0], [36400.0, 2.0], [35200.0, 1.0], [36800.0, 1.0], [38800.0, 2.0], [40800.0, 1.0], [40400.0, 2.0], [40000.0, 1.0], [42800.0, 1.0], [43600.0, 1.0], [44000.0, 1.0], [45600.0, 1.0], [47200.0, 2.0], [50800.0, 1.0], [54800.0, 1.0], [55600.0, 1.0], [56000.0, 2.0], [56400.0, 1.0], [60000.0, 1.0], [61200.0, 2.0], [62800.0, 6.0], [62400.0, 3.0], [62000.0, 3.0], [63200.0, 7.0], [63600.0, 6.0], [64400.0, 1.0], [64000.0, 8.0], [71200.0, 1.0], [72000.0, 1.0], [75200.0, 6.0], [74400.0, 2.0], [89600.0, 4.0], [99200.0, 1.0], [104000.0, 1.0], [129600.0, 1.0], [130400.0, 1.0], [67100.0, 2.0], [71100.0, 4.0], [75100.0, 4.0], [74300.0, 2.0], [89500.0, 1.0], [95900.0, 1.0], [99100.0, 3.0], [101500.0, 1.0], [103100.0, 1.0], [124700.0, 1.0], [33100.0, 5.0], [33900.0, 1.0], [36300.0, 2.0], [36700.0, 1.0], [35100.0, 2.0], [37500.0, 2.0], [38700.0, 2.0], [39100.0, 1.0], [40300.0, 1.0], [39900.0, 1.0], [47100.0, 1.0], [48300.0, 1.0], [51900.0, 1.0], [53500.0, 1.0], [55100.0, 1.0], [55900.0, 2.0], [56300.0, 1.0], [57900.0, 2.0], [59900.0, 1.0], [63100.0, 371.0], [61500.0, 3.0], [62700.0, 1.0], [62300.0, 3.0], [61900.0, 1.0], [63500.0, 2.0], [64300.0, 2.0], [64700.0, 1.0], [63900.0, 4.0], [67000.0, 2.0], [71000.0, 4.0], [75000.0, 1.0], [74200.0, 3.0], [75800.0, 3.0], [76600.0, 1.0], [89400.0, 2.0], [91800.0, 1.0], [95800.0, 2.0], [99000.0, 2.0], [102200.0, 1.0], [104600.0, 1.0], [66900.0, 1.0], [70900.0, 2.0], [71700.0, 1.0], [75700.0, 2.0], [74900.0, 3.0], [76500.0, 1.0], [74100.0, 3.0], [89300.0, 1.0], [90100.0, 1.0], [91700.0, 4.0], [94100.0, 1.0], [94900.0, 1.0], [95700.0, 2.0], [98900.0, 3.0], [99700.0, 1.0], [101300.0, 1.0], [102100.0, 2.0], [17500.0, 1.0], [21700.0, 1.0], [23100.0, 1.0], [28100.0, 2.0], [28300.0, 2.0], [32700.0, 6.0], [32500.0, 6.0], [32300.0, 1.0], [33000.0, 7.0], [33800.0, 1.0], [33400.0, 2.0], [34600.0, 1.0], [36200.0, 2.0], [36600.0, 1.0], [35000.0, 1.0], [37400.0, 3.0], [38600.0, 3.0], [39400.0, 1.0], [40600.0, 1.0], [40200.0, 3.0], [41400.0, 1.0], [42200.0, 1.0], [43000.0, 1.0], [45000.0, 2.0], [47400.0, 2.0], [48200.0, 1.0], [57400.0, 1.0], [61400.0, 2.0], [61800.0, 3.0], [63000.0, 159.0], [62600.0, 2.0], [63400.0, 3.0], [64200.0, 3.0], [64600.0, 1.0], [63800.0, 3.0], [70800.0, 2.0], [71600.0, 1.0], [75600.0, 3.0], [74800.0, 2.0], [74000.0, 1.0], [91600.0, 6.0], [98000.0, 1.0], [98800.0, 3.0]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[163200.0, 2.0], [164400.0, 1.0], [166800.0, 1.0], [700.0, 1.0], [178000.0, 1.0], [183200.0, 1.0], [182800.0, 1.0], [1800.0, 2.0], [2100.0, 1.0], [136900.0, 1.0], [139700.0, 1.0], [140500.0, 1.0], [182900.0, 1.0], [184500.0, 1.0], [3200.0, 1.0], [3600.0, 1.0], [66500.0, 1.0], [72300.0, 1.0], [78900.0, 1.0], [84900.0, 1.0], [94500.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [121900.0, 1.0], [7800.0, 1.0], [123300.0, 1.0], [8100.0, 1.0], [8600.0, 1.0], [9100.0, 1.0], [9700.0, 1.0], [154600.0, 1.0], [164200.0, 2.0], [166200.0, 1.0], [181400.0, 1.0], [184200.0, 1.0], [13100.0, 1.0], [16500.0, 1.0], [16900.0, 1.0], [17200.0, 2.0], [18000.0, 1.0], [19800.0, 1.0], [20000.0, 1.0], [20600.0, 1.0], [20700.0, 1.0], [21900.0, 1.0], [22700.0, 1.0], [23700.0, 1.0], [26800.0, 1.0], [30600.0, 1.0], [33300.0, 1.0], [33600.0, 1.0], [34500.0, 1.0], [34200.0, 1.0], [34100.0, 1.0], [36300.0, 1.0], [38000.0, 2.0], [38100.0, 1.0], [152700.0, 1.0], [39900.0, 1.0], [41300.0, 1.0], [44300.0, 1.0], [45500.0, 1.0], [46100.0, 1.0], [181500.0, 1.0], [183100.0, 1.0], [184300.0, 1.0], [183900.0, 1.0], [58600.0, 1.0], [61100.0, 1.0], [61200.0, 1.0], [63800.0, 1.0], [63600.0, 1.0], [64000.0, 1.0], [64600.0, 1.0], [65800.0, 2.0], [72200.0, 1.0], [71200.0, 1.0], [71800.0, 1.0], [300.0, 1.0], [75200.0, 4.0], [77400.0, 1.0], [82800.0, 1.0], [92600.0, 1.0], [113000.0, 1.0], [115000.0, 1.0], [118400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[0.0, 212.0], [135200.0, 3.0], [133600.0, 1.0], [136800.0, 1.0], [148000.0, 1.0], [173600.0, 1.0], [132900.0, 1.0], [93100.0, 1.0], [118700.0, 1.0], [117900.0, 1.0], [119500.0, 1.0], [125900.0, 1.0], [124300.0, 1.0], [128300.0, 2.0], [129900.0, 2.0], [130700.0, 1.0], [129100.0, 1.0], [135400.0, 5.0], [137000.0, 2.0], [149800.0, 1.0], [100.0, 1.0], [134700.0, 2.0], [133100.0, 3.0], [147500.0, 6.0], [155500.0, 1.0], [42500.0, 1.0], [166700.0, 1.0], [200.0, 3.0], [300.0, 1.0], [98600.0, 1.0], [400.0, 1.0], [120200.0, 1.0], [125800.0, 4.0], [500.0, 3.0], [128200.0, 1.0], [130600.0, 1.0], [135600.0, 1.0], [137200.0, 2.0], [132400.0, 1.0], [600.0, 1.0], [151600.0, 1.0], [148400.0, 2.0], [700.0, 2.0], [182000.0, 1.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 3.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 3.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [131700.0, 2.0], [2200.0, 3.0], [2300.0, 2.0], [2400.0, 1.0], [147700.0, 3.0], [2500.0, 2.0], [155700.0, 1.0], [2600.0, 2.0], [2800.0, 5.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 2.0], [3300.0, 5.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 3.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 3.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 3.0], [4500.0, 1.0], [4600.0, 2.0], [4700.0, 2.0], [4800.0, 2.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5200.0, 2.0], [5300.0, 2.0], [5400.0, 2.0], [5500.0, 1.0], [5600.0, 2.0], [5700.0, 2.0], [5800.0, 1.0], [96900.0, 1.0], [5900.0, 2.0], [6000.0, 1.0], [6100.0, 3.0], [6200.0, 2.0], [6300.0, 1.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 2.0], [6800.0, 4.0], [6900.0, 2.0], [7000.0, 1.0], [7100.0, 3.0], [114500.0, 1.0], [7300.0, 3.0], [7400.0, 2.0], [7200.0, 8.0], [117700.0, 1.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 4.0], [7800.0, 1.0], [7900.0, 3.0], [8100.0, 2.0], [127300.0, 1.0], [128100.0, 1.0], [128900.0, 1.0], [130500.0, 1.0], [8300.0, 3.0], [8700.0, 2.0], [8200.0, 2.0], [8600.0, 3.0], [8400.0, 2.0], [135800.0, 2.0], [137400.0, 2.0], [132600.0, 1.0], [8800.0, 5.0], [8900.0, 1.0], [9000.0, 2.0], [9100.0, 1.0], [9200.0, 1.0], [9300.0, 2.0], [9400.0, 2.0], [9600.0, 2.0], [9500.0, 1.0], [9700.0, 2.0], [150200.0, 1.0], [148600.0, 1.0], [9800.0, 2.0], [10000.0, 2.0], [9900.0, 1.0], [10100.0, 1.0], [10200.0, 2.0], [10300.0, 3.0], [10400.0, 1.0], [10500.0, 2.0], [10600.0, 2.0], [10700.0, 4.0], [11100.0, 7.0], [10800.0, 4.0], [10900.0, 4.0], [11000.0, 4.0], [11300.0, 1.0], [182200.0, 1.0], [136700.0, 1.0], [131900.0, 2.0], [133500.0, 2.0], [147900.0, 1.0], [163900.0, 1.0], [64800.0, 1.0], [113600.0, 1.0], [120000.0, 2.0], [124000.0, 1.0], [124800.0, 1.0], [125600.0, 1.0], [127200.0, 1.0], [128800.0, 1.0], [129600.0, 1.0], [132800.0, 1.0], [136000.0, 3.0], [131200.0, 1.0], [142400.0, 1.0], [135300.0, 4.0], [136900.0, 3.0], [132100.0, 4.0], [124700.0, 1.0], [127900.0, 2.0], [136200.0, 1.0], [131400.0, 2.0], [133000.0, 2.0], [144200.0, 1.0], [147400.0, 2.0], [158600.0, 1.0], [174600.0, 1.0], [135500.0, 7.0], [137100.0, 3.0], [63100.0, 283.0], [118200.0, 1.0], [120600.0, 1.0], [119800.0, 1.0], [130200.0, 4.0], [131000.0, 1.0], [133200.0, 4.0], [147600.0, 1.0], [135700.0, 3.0], [134100.0, 1.0], [132500.0, 1.0], [148500.0, 2.0], [74100.0, 1.0], [86900.0, 1.0], [118900.0, 1.0], [126100.0, 1.0], [125300.0, 1.0], [127700.0, 1.0], [130100.0, 2.0], [130900.0, 3.0], [136600.0, 4.0], [131800.0, 1.0], [135900.0, 1.0], [137500.0, 2.0], [131100.0, 1.0], [142300.0, 1.0], [63000.0, 89.0], [118000.0, 1.0], [121200.0, 1.0], [122000.0, 1.0], [122800.0, 1.0], [119600.0, 1.0], [128400.0, 1.0], [130000.0, 1.0]], "isOverall": false, "label": "suggestion products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 184500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1697.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 9.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 393.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1697.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.70302272E12, "maxY": 827.817518248175, "series": [{"data": [[1.70302296E12, 60.5], [1.70302302E12, 32.0], [1.7030229E12, 62.849999999999994], [1.70302308E12, 12.0]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[1.70302284E12, 827.817518248175], [1.70302272E12, 111.27777777777777], [1.7030229E12, 244.7004048582998], [1.70302278E12, 807.1411764705875]], "isOverall": false, "label": "search sugestions and products", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302308E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 184596.0, "series": [{"data": [[12.0, 658.0], [13.0, 627.0], [14.0, 590.0], [16.0, 624.0], [33.0, 1609.0], [36.0, 1683.0], [47.0, 2326.0], [126.0, 6945.0], [130.0, 7255.0], [153.0, 8528.0], [159.0, 124723.0], [161.0, 126602.0], [170.0, 9516.0], [191.0, 10679.0], [220.0, 127419.0], [250.0, 129880.0], [265.0, 129647.0], [256.0, 130493.0], [306.0, 17580.0], [377.0, 21794.0], [400.0, 23104.0], [483.0, 18403.0], [486.0, 28214.0], [487.0, 28201.0], [491.0, 28301.0], [492.0, 28182.0], [493.0, 28211.0], [505.0, 28814.0], [570.0, 32647.0], [602.0, 48659.5], [585.0, 13464.0], [590.0, 33782.0], [591.0, 33799.0], [601.0, 63119.0], [600.0, 63113.0], [594.0, 54505.0], [593.0, 92030.42500000002], [597.0, 63125.0], [596.0, 79467.0], [599.0, 63135.0], [598.0, 95798.0], [605.0, 47901.5], [607.0, 48170.0], [606.0, 63128.0], [604.0, 63197.0], [603.0, 63150.0], [611.0, 39181.2], [608.0, 48233.0], [623.0, 63094.0], [622.0, 63083.0], [621.0, 63130.0], [620.0, 63100.0], [619.0, 63118.0], [618.0, 63103.0], [617.0, 63107.0], [616.0, 63112.0], [609.0, 43188.333333333336], [610.0, 40617.75], [614.0, 48456.75], [613.0, 63103.0], [612.0, 63081.0], [615.0, 63097.0], [632.0, 55814.75], [633.0, 42948.333333333336], [634.0, 38889.0], [635.0, 42766.333333333336], [637.0, 93881.0], [636.0, 63141.0], [638.0, 47982.5], [639.0, 63123.0], [624.0, 63106.0], [625.0, 48557.5], [626.0, 48237.0], [628.0, 63124.0], [627.0, 63124.0], [629.0, 43615.333333333336], [630.0, 37544.571428571435], [631.0, 33175.0], [644.0, 38480.0], [643.0, 39721.57142857143], [642.0, 63121.0], [641.0, 63106.0], [640.0, 63107.0], [645.0, 32790.0], [646.0, 63122.5], [664.0, 63098.0], [647.0, 63138.0], [666.0, 63098.0], [665.0, 63113.0], [667.0, 48076.0], [671.0, 63096.0], [670.0, 63096.0], [669.0, 63111.0], [668.0, 63128.0], [652.0, 36254.77777777778], [651.0, 63105.0], [650.0, 63104.0], [649.0, 63121.0], [648.0, 63121.0], [653.0, 38802.6], [654.0, 47727.0], [655.0, 44173.0], [656.0, 39334.0], [662.0, 47945.0], [661.0, 63116.0], [660.0, 63100.0], [659.0, 63116.0], [658.0, 63102.0], [657.0, 63101.0], [663.0, 63130.0], [702.0, 63102.0], [673.0, 53463.6], [687.0, 91446.5], [685.0, 63138.0], [684.0, 91481.5], [682.0, 63138.0], [681.0, 63127.0], [674.0, 43864.0], [693.0, 48809.5], [694.0, 63111.5], [695.0, 63135.0], [703.0, 63102.0], [692.0, 84439.75], [690.0, 91701.0], [701.0, 77354.0], [699.0, 63135.0], [698.0, 63134.0], [697.0, 91706.0], [679.0, 63124.0], [678.0, 63140.0], [677.0, 63126.0], [676.0, 63094.0], [675.0, 63112.0], [731.0, 49759.5], [706.0, 55226.0], [719.0, 63130.0], [718.0, 63114.0], [717.0, 63099.0], [716.0, 63099.0], [715.0, 63083.0], [714.0, 63083.0], [713.0, 84571.0], [735.0, 63115.0], [721.0, 63100.0], [720.0, 63085.0], [723.0, 63085.0], [722.0, 63071.0], [725.0, 63098.0], [724.0, 63100.0], [727.0, 63092.0], [726.0, 63096.0], [734.0, 63115.0], [733.0, 63115.0], [732.0, 63128.0], [730.0, 63114.0], [729.0, 63100.0], [728.0, 63115.0], [709.0, 91640.0], [707.0, 91595.0], [743.0, 63080.0], [766.0, 89702.0], [747.0, 50256.5], [746.0, 63080.0], [745.0, 63079.0], [744.0, 63094.0], [748.0, 63080.0], [750.0, 63080.0], [749.0, 63096.0], [767.0, 63090.0], [765.0, 63095.0], [764.0, 89524.0], [762.0, 85760.00000000001], [742.0, 76617.0], [740.0, 63081.0], [739.0, 63081.0], [738.0, 63082.0], [737.0, 63083.0], [736.0, 63083.0], [751.0, 63064.0], [755.0, 63069.0], [754.0, 63103.0], [753.0, 63106.0], [752.0, 63079.0], [772.0, 38785.0], [771.0, 38669.0], [770.0, 80947.0], [773.0, 38638.0], [774.0, 83034.0], [792.0, 63100.0], [775.0, 63096.0], [794.0, 63092.0], [793.0, 63096.0], [796.0, 63083.0], [795.0, 63088.0], [776.0, 38750.0], [777.0, 38834.0], [779.0, 74298.2], [780.0, 63088.0], [782.0, 63113.0], [781.0, 63084.0], [783.0, 63110.0], [786.0, 51145.5], [791.0, 51265.0], [790.0, 63088.0], [789.0, 63091.0], [788.0, 63095.0], [787.0, 63097.0], [797.0, 51417.5], [799.0, 51444.5], [785.0, 63117.0], [784.0, 63106.0], [798.0, 63097.0], [815.0, 40235.0], [806.0, 40148.5], [811.0, 40333.0], [812.0, 46153.0], [813.0, 40259.0], [824.0, 40750.0], [804.0, 63138.0], [803.0, 63112.0], [802.0, 63098.0], [801.0, 63086.0], [800.0, 63088.0], [837.0, 41459.0], [854.0, 42241.0], [863.0, 42821.0], [867.0, 43022.0], [879.0, 43669.0], [887.0, 44015.0], [895.0, 44543.0], [905.0, 45004.0], [906.0, 45024.5], [919.0, 45695.0], [945.0, 47200.0], [950.0, 47276.5], [951.0, 47477.0], [968.0, 48364.0], [970.0, 48241.0], [991.0, 65168.47222222222], [990.0, 63111.399999999994], [979.0, 63159.0], [997.0, 53266.2], [996.0, 66286.82608695648], [995.0, 64846.51063829787], [994.0, 64543.28571428571], [993.0, 63112.833333333336], [992.0, 63123.3]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[848.8499999999995, 61578.08699999998]], "isOverall": false, "label": "suggestions searches-Aggregated", "isController": false}, {"data": [[2.0, 184325.0], [3.0, 183147.0], [4.0, 184242.0], [5.0, 184596.0], [6.0, 182863.0], [7.0, 183214.0], [8.0, 182942.0], [9.0, 181440.0], [10.0, 181565.0], [11.0, 178009.0], [12.0, 166840.0], [13.0, 166258.0], [14.0, 164283.0], [15.0, 164245.0], [16.0, 82473.0], [17.0, 81791.0], [18.0, 163217.0], [19.0, 154637.0], [20.0, 152711.0], [21.0, 47294.666666666664], [22.0, 139764.0], [23.0, 136957.0], [24.0, 123372.0], [25.0, 121997.0], [26.0, 118414.0], [27.0, 113058.0], [28.0, 115048.0], [29.0, 92664.0], [30.0, 94595.0], [31.0, 84904.0], [33.0, 78933.0], [32.0, 82811.0], [35.0, 75280.0], [34.0, 77428.0], [36.0, 38554.5], [37.0, 38551.5], [39.0, 72386.0], [38.0, 75219.0], [40.0, 37010.5], [41.0, 71266.0], [43.0, 66521.0], [42.0, 72211.0], [45.0, 64634.0], [44.0, 65895.0], [47.0, 63639.0], [46.0, 64003.0], [49.0, 63871.0], [48.0, 65851.0], [51.0, 61131.0], [50.0, 61257.0], [52.0, 30938.0], [53.0, 46132.0], [55.0, 44387.0], [54.0, 45571.0], [57.0, 39950.0], [56.0, 41347.0], [59.0, 38133.0], [58.0, 38023.0], [61.0, 36366.0], [60.0, 38069.0], [63.0, 34223.0], [62.0, 34198.0], [67.0, 30632.0], [66.0, 33373.0], [65.0, 33670.0], [64.0, 34533.0], [71.0, 13204.5], [70.0, 21945.0], [69.0, 23779.0], [68.0, 26897.0], [75.0, 19899.0], [74.0, 20088.0], [73.0, 20645.0], [72.0, 20709.0], [79.0, 18075.0], [78.0, 16916.0], [77.0, 17291.0], [76.0, 17239.0], [83.0, 8642.0], [82.0, 9781.0], [81.0, 13165.0], [80.0, 16543.0], [87.0, 9168.0], [86.0, 7430.0], [85.0, 7814.0], [84.0, 8152.0], [91.0, 6343.0], [90.0, 6291.0], [89.0, 6966.0], [88.0, 7058.0], [1.0, 183970.0]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[44.97000000000002, 71519.86000000002]], "isOverall": false, "label": "search by categories-Aggregated", "isController": false}, {"data": [[2.0, 117903.0], [3.0, 118204.0], [4.0, 119611.0], [5.0, 122863.0], [6.0, 120634.0], [7.0, 117705.0], [8.0, 125614.0], [9.0, 120095.0], [10.0, 119532.0], [11.0, 124327.0], [12.0, 131790.0], [13.0, 131785.0], [15.0, 131977.0], [16.0, 174676.0], [17.0, 114519.0], [18.0, 131256.0], [19.0, 136840.0], [21.0, 118832.5], [22.0, 120249.0], [23.0, 120076.0], [24.0, 147561.0], [25.0, 147501.0], [26.0, 147488.0], [27.0, 147510.0], [28.0, 147509.0], [29.0, 147486.0], [30.0, 147709.0], [31.0, 155755.0], [33.0, 148518.0], [32.0, 148549.0], [35.0, 148404.0], [34.0, 148453.0], [37.0, 118036.0], [36.0, 155541.0], [39.0, 147973.0], [38.0, 148072.0], [41.0, 147768.0], [40.0, 147514.0], [43.0, 147543.0], [42.0, 147703.0], [45.0, 125334.0], [44.0, 147684.0], [47.0, 125926.0], [46.0, 124857.0], [49.0, 125874.0], [48.0, 125896.0], [51.0, 125863.0], [50.0, 125865.0], [53.0, 182273.0], [52.0, 126141.0], [55.0, 130008.0], [54.0, 129107.0], [57.0, 148633.0], [56.0, 182088.0], [59.0, 130921.0], [58.0, 130681.0], [60.0, 131467.0], [63.0, 133091.0], [62.0, 145537.0], [67.0, 133234.0], [66.0, 133549.0], [65.0, 133589.0], [64.0, 133060.0], [71.0, 133290.0], [70.0, 133208.0], [69.0, 133121.0], [68.0, 133164.0], [75.0, 132579.0], [74.0, 132627.0], [73.0, 133236.0], [72.0, 151655.0], [79.0, 142362.0], [78.0, 149818.0], [77.0, 150279.0], [76.0, 144222.0], [83.0, 131169.0], [82.0, 130923.0], [81.0, 142404.0], [80.0, 130957.0], [87.0, 131928.0], [86.0, 131871.0], [84.0, 131449.0], [91.0, 132117.0], [90.0, 132137.0], [89.0, 132143.0], [88.0, 132136.0], [95.0, 135474.0], [94.0, 135500.0], [93.0, 134100.0], [92.0, 133156.0], [99.0, 136083.0], [98.0, 136090.0], [97.0, 135444.0], [96.0, 135514.0], [102.0, 136643.0], [101.0, 137076.0], [100.0, 137166.0], [107.0, 137201.0], [106.0, 136902.0], [105.0, 136652.33333333334], [111.0, 137487.0], [109.0, 137524.0], [108.0, 137557.0], [115.0, 173676.0], [114.0, 137140.0], [113.0, 137193.0], [112.0, 137237.0], [119.0, 136734.0], [118.0, 136906.0], [117.0, 136961.0], [116.0, 137021.0], [123.0, 135841.0], [122.0, 135842.0], [121.0, 135996.0], [120.0, 136014.0], [127.0, 135598.0], [126.0, 135679.0], [125.0, 135706.0], [124.0, 135763.0], [135.0, 135437.0], [134.0, 135415.0], [133.0, 135505.0], [132.0, 135563.0], [131.0, 135572.0], [130.0, 166742.0], [129.0, 135494.0], [128.0, 135565.0], [143.0, 133655.0], [142.0, 134779.0], [141.0, 135236.0], [140.0, 135278.0], [139.0, 135312.0], [138.0, 135363.5], [136.0, 135332.0], [151.0, 69459.5], [150.0, 130729.0], [149.0, 7477.8], [147.0, 10732.0], [159.0, 129937.0], [158.0, 129984.0], [157.0, 130174.0], [156.0, 130278.0], [155.0, 130118.0], [154.0, 130214.0], [153.0, 130228.0], [152.0, 130241.0], [167.0, 128204.0], [166.0, 163936.0], [165.0, 128364.0], [164.0, 128340.0], [163.0, 128429.0], [162.0, 128858.0], [161.0, 128998.0], [160.0, 129616.0], [175.0, 63092.0], [174.0, 134762.0], [173.0, 63110.0], [172.0, 127237.0], [171.0, 135292.0], [170.0, 135780.0], [169.0, 127953.0], [168.0, 136229.0], [183.0, 63147.666666666664], [180.0, 63126.0], [179.0, 63103.0], [178.0, 63089.0], [177.0, 63101.0], [191.0, 63100.0], [190.0, 63085.0], [189.0, 63065.0], [188.0, 127934.0], [187.0, 63126.0], [186.0, 63112.0], [185.0, 63113.0], [184.0, 128115.0], [199.0, 127362.0], [198.0, 63092.0], [197.0, 63102.0], [196.0, 63104.0], [195.0, 63124.0], [194.0, 63102.0], [193.0, 63111.0], [192.0, 127727.0], [202.0, 37254.5], [207.0, 63107.0], [206.0, 63074.0], [205.0, 63109.5], [203.0, 63102.0], [201.0, 63100.0], [200.0, 63100.0], [212.0, 63106.0], [211.0, 63099.0], [210.0, 63093.0], [209.0, 63109.0], [208.0, 63089.0], [223.0, 132803.0], [222.0, 63073.0], [221.0, 63088.0], [220.0, 63093.0], [219.0, 63092.0], [218.0, 63123.0], [217.0, 63123.0], [216.0, 63118.75], [230.0, 63095.0], [229.0, 63080.0], [228.0, 63094.0], [227.0, 63126.0], [226.0, 63077.0], [225.0, 63111.0], [224.0, 63070.0], [239.0, 63098.0], [238.0, 63097.0], [237.0, 63097.0], [236.0, 63098.0], [235.0, 63092.0], [234.0, 63069.0], [233.0, 124726.0], [232.0, 63103.0], [247.0, 63133.0], [246.0, 63119.0], [245.0, 63100.0], [244.0, 63148.0], [243.0, 63116.0], [242.0, 63130.0], [241.0, 63114.0], [255.0, 63119.0], [254.0, 124053.0], [253.0, 63102.0], [252.0, 63102.0], [251.0, 63102.0], [250.0, 63102.0], [249.0, 63102.0], [248.0, 63094.0], [270.0, 63103.0], [271.0, 63104.0], [269.0, 63088.0], [268.0, 63104.0], [267.0, 63118.0], [266.0, 63120.0], [265.0, 63120.0], [264.0, 63117.5], [262.0, 63165.0], [259.0, 63102.0], [258.0, 63088.0], [257.0, 63116.0], [256.0, 63087.0], [261.0, 63158.0], [275.0, 63100.0], [285.0, 63115.0], [284.0, 63132.0], [283.0, 63123.0], [281.0, 63125.0], [278.0, 63133.0], [277.0, 63119.0], [276.0, 63095.0], [274.0, 63121.0], [273.0, 63106.0], [272.0, 63105.0], [300.0, 63133.0], [302.0, 63129.0], [303.0, 63116.0], [301.0, 63113.0], [299.0, 63120.0], [296.0, 63113.0], [294.0, 63114.0], [289.0, 63111.0], [288.0, 63142.0], [291.0, 63104.0], [290.0, 63119.0], [293.0, 63124.0], [292.0, 63116.0], [317.0, 63097.0], [318.0, 63128.0], [316.0, 63081.0], [307.0, 63082.0], [306.0, 63084.0], [305.0, 63102.0], [304.0, 63089.0], [315.0, 63092.0], [314.0, 63108.0], [312.0, 63096.0], [311.0, 63142.0], [310.0, 63086.0], [308.0, 122017.0], [332.0, 63097.0], [334.0, 121278.0], [335.0, 63147.0], [333.0, 63130.0], [331.0, 63113.0], [329.0, 63113.0], [327.0, 63098.0], [321.0, 63112.0], [320.0, 63113.0], [326.0, 63111.0], [325.0, 63111.0], [350.0, 63110.0], [351.0, 63126.0], [349.0, 63126.0], [348.0, 63124.0], [347.0, 63081.0], [346.0, 63119.0], [345.0, 63094.0], [344.0, 63097.0], [343.0, 63100.0], [336.0, 63098.0], [339.0, 63108.0], [337.0, 63130.0], [342.0, 63084.0], [341.0, 63115.0], [340.0, 63116.0], [365.0, 63100.0], [367.0, 63119.5], [364.0, 63145.0], [355.0, 63089.0], [354.0, 63118.0], [353.0, 63119.0], [352.0, 63110.0], [363.0, 63098.0], [362.0, 63098.0], [361.0, 63113.0], [359.0, 63105.0], [358.0, 63111.0], [357.0, 63110.0], [356.0, 63106.0], [381.0, 63112.0], [375.0, 63106.0], [374.0, 63124.0], [373.0, 63136.0], [372.0, 63122.2], [399.0, 63123.0], [398.0, 63133.0], [396.0, 63123.0], [387.0, 63120.66666666667], [415.0, 63120.0], [414.0, 63123.0], [413.0, 63137.333333333336], [410.0, 63101.0], [409.0, 63123.8], [404.0, 63123.25], [400.0, 63123.8], [428.0, 63123.0], [430.0, 63080.0], [431.0, 63100.0], [429.0, 63105.0], [426.0, 63139.0], [425.0, 63092.0], [423.0, 63119.0], [420.0, 63120.0], [419.0, 63108.0], [418.0, 63112.0], [417.0, 63093.0], [447.0, 63098.0], [446.0, 63114.0], [444.0, 63130.333333333336], [441.0, 63124.0], [437.0, 63109.0], [436.0, 63110.0], [433.0, 63077.0], [460.0, 63135.0], [456.0, 63136.0], [455.0, 63134.0], [454.0, 63134.0], [451.0, 63102.0], [449.0, 63114.0], [478.0, 63092.0], [477.0, 63085.0], [476.0, 63111.0], [475.0, 63081.0], [474.0, 63096.0], [471.0, 63120.0], [468.0, 63098.0], [466.0, 63121.0], [493.0, 63098.5], [491.0, 63156.0], [489.0, 63141.0], [488.0, 63092.0], [487.0, 63102.0], [486.0, 63098.0], [483.0, 63067.0], [482.0, 63075.0], [480.0, 63092.0], [509.0, 63117.333333333336], [506.0, 63102.666666666664], [505.0, 63102.0], [502.0, 63104.0], [501.0, 63121.666666666664], [498.0, 63120.6], [541.0, 63117.0], [543.0, 63092.0], [528.0, 63080.0], [530.0, 63092.0], [529.0, 63106.0], [533.0, 63096.0], [532.0, 63130.0], [540.0, 63105.0], [539.0, 63135.0], [538.0, 63122.0], [537.0, 63109.0], [536.0, 63108.0], [518.0, 63122.0], [514.0, 63122.0], [527.0, 63110.0], [526.0, 63110.333333333336], [523.0, 63084.0], [522.0, 63145.0], [521.0, 63122.0], [535.0, 63095.0], [534.0, 63094.0], [573.0, 7280.0], [575.0, 7264.0], [571.0, 7311.75], [569.0, 7781.0], [568.0, 8299.0], [551.0, 63109.0], [550.0, 63109.0], [549.0, 63080.0], [547.0, 63103.0], [546.0, 63083.0], [545.0, 63078.5], [565.0, 8818.0], [564.0, 9751.5], [563.0, 10790.5], [559.0, 10951.5], [557.0, 11053.0], [554.0, 11118.5], [552.0, 63100.0], [604.0, 0.0], [607.0, 0.0], [592.0, 1972.8], [594.0, 0.0], [593.0, 4208.333333333333], [597.0, 0.0], [596.0, 0.0], [606.0, 0.0], [605.0, 1.0], [603.0, 0.0], [602.0, 0.0], [601.0, 0.0], [600.0, 0.0], [590.0, 3362.0], [576.0, 7264.0], [581.0, 4426.0], [579.0, 6744.5], [586.0, 3662.5], [585.0, 4170.0], [599.0, 0.0], [598.0, 0.0], [636.0, 0.0], [639.0, 0.0], [624.0, 0.0], [626.0, 1.0], [625.0, 0.0], [628.0, 0.0], [627.0, 0.0], [638.0, 0.0], [637.0, 0.0], [635.0, 1.0], [634.0, 0.0], [633.0, 0.0], [632.0, 0.0], [623.0, 0.0], [609.0, 0.0], [608.0, 0.0], [611.0, 1.0], [610.0, 1.0], [613.0, 0.0], [612.0, 0.0], [615.0, 1.0], [614.0, 1.0], [622.0, 0.0], [621.0, 1.0], [620.0, 0.0], [619.0, 0.0], [618.0, 0.0], [617.0, 0.0], [616.0, 1.0], [630.0, 1.0], [629.0, 0.0], [668.0, 0.0], [671.0, 1.0], [657.0, 0.0], [656.0, 0.0], [659.0, 0.0], [658.0, 0.0], [661.0, 0.0], [660.0, 1.0], [670.0, 0.0], [669.0, 0.0], [667.0, 0.0], [666.0, 0.0], [665.0, 0.0], [664.0, 0.0], [655.0, 1.0], [640.0, 0.0], [642.0, 0.0], [641.0, 0.0], [644.0, 0.0], [643.0, 0.0], [647.0, 1.0], [646.0, 0.0], [654.0, 0.0], [653.0, 0.0], [652.0, 1.0], [651.0, 0.0], [650.0, 0.0], [649.0, 0.0], [648.0, 0.0], [663.0, 0.0], [662.0, 0.0], [697.0, 0.0], [702.0, 0.0], [703.0, 1.0], [690.0, 0.0], [688.0, 0.0], [701.0, 0.0], [699.0, 0.0], [698.0, 1.0], [687.0, 1.0], [673.0, 0.5], [675.0, 1.0], [674.0, 0.0], [677.0, 1.0], [676.0, 0.0], [679.0, 0.0], [678.0, 0.0], [685.0, 1.0], [684.0, 0.0], [682.0, 0.0], [681.0, 0.0], [695.0, 0.0], [694.0, 0.0], [693.0, 0.0], [692.0, 0.0], [732.0, 0.0], [735.0, 0.0], [721.0, 0.0], [720.0, 0.0], [723.0, 0.0], [722.0, 0.0], [725.0, 0.0], [724.0, 0.0], [734.0, 0.0], [733.0, 1.0], [731.0, 0.0], [730.0, 0.0], [729.0, 0.0], [728.0, 1.0], [719.0, 0.0], [705.0, 0.0], [707.0, 1.0], [706.0, 0.0], [709.0, 0.0], [708.0, 98604.0], [718.0, 1.0], [717.0, 0.0], [716.0, 0.0], [715.0, 0.0], [714.0, 0.0], [713.0, 0.0], [727.0, 0.0], [726.0, 0.0], [762.0, 0.16666666666666669], [766.0, 0.0], [767.0, 1.0], [753.0, 0.0], [752.0, 0.0], [765.0, 0.0], [764.0, 1.0], [763.0, 113681.0], [760.0, 0.0], [743.0, 0.0], [742.0, 1.0], [740.0, 0.0], [739.0, 0.0], [738.0, 0.0], [737.0, 0.0], [736.0, 0.0], [751.0, 1.0], [750.0, 1.0], [749.0, 1.0], [748.0, 1.0], [747.0, 0.0], [746.0, 1.0], [745.0, 0.0], [744.0, 0.0], [755.0, 0.0], [754.0, 1.0], [796.0, 0.0], [799.0, 1.0], [785.0, 0.0], [784.0, 1.0], [787.0, 0.0], [786.0, 0.0], [789.0, 1.0], [788.0, 0.0], [798.0, 0.0], [797.0, 0.0], [795.0, 1.0], [794.0, 1.0], [793.0, 1.0], [792.0, 0.0], [783.0, 1.0], [770.0, 0.6666666666666667], [775.0, 1.0], [774.0, 1.0], [782.0, 1.0], [781.0, 1.0], [780.0, 0.0], [779.0, 0.0], [778.0, 0.0], [791.0, 1.0], [790.0, 0.0], [830.0, 10517.0], [831.0, 10425.0], [828.0, 10614.0], [827.0, 10762.666666666666], [822.0, 10837.0], [821.0, 10980.666666666666], [820.0, 11044.0], [818.0, 11140.0], [815.0, 11188.0], [800.0, 0.0], [802.0, 1.0], [801.0, 0.0], [804.0, 0.0], [803.0, 0.0], [856.0, 8251.0], [862.0, 7993.0], [861.0, 42554.0], [863.0, 7735.0], [848.0, 8829.666666666666], [860.0, 7993.0], [857.0, 8226.75], [847.0, 8953.0], [832.0, 10377.0], [834.0, 10251.0], [833.0, 10314.0], [836.0, 10000.0], [835.0, 10141.0], [839.0, 9785.0], [837.0, 9888.0], [846.0, 9090.0], [843.0, 9359.666666666666], [842.0, 9538.0], [840.0, 9669.0], [855.0, 8378.0], [852.0, 8549.0], [851.0, 8569.5], [850.0, 8713.0], [894.0, 6121.0], [895.0, 6019.0], [893.0, 6153.0], [892.0, 6302.333333333333], [890.0, 6409.0], [889.0, 6458.0], [879.0, 7138.0], [870.0, 7337.5], [868.0, 7487.0], [867.0, 7761.0], [866.0, 7696.0], [865.0, 7854.0], [871.0, 7297.0], [873.0, 7266.0], [885.0, 6683.25], [883.0, 6854.5], [882.0, 6934.0], [880.0, 7022.5], [926.0, 4038.5], [927.0, 3893.0], [925.0, 4148.0], [923.0, 4230.0], [921.0, 4316.0], [901.0, 5564.0], [900.0, 5697.666666666667], [899.0, 5789.0], [896.0, 5908.0], [911.0, 5206.0], [908.0, 5328.0], [907.0, 5420.5], [905.0, 5450.0], [919.0, 4567.5], [918.0, 4786.0], [917.0, 4958.666666666667], [913.0, 5075.0], [946.0, 3086.0], [958.0, 2467.0], [956.0, 2577.0], [954.0, 2688.0], [952.0, 2791.5], [941.0, 3181.0], [935.0, 3512.5], [934.0, 3418.0], [933.0, 3592.0], [931.0, 3640.0], [929.0, 3766.3333333333335], [939.0, 3318.3333333333335], [949.0, 2880.0], [948.0, 2880.0], [947.0, 2880.0], [944.0, 3116.0], [990.0, 153.6], [991.0, 93158.0], [989.0, 2573.0], [988.0, 660.0], [987.0, 786.0], [986.0, 820.0], [984.0, 1023.0], [966.0, 2214.0], [965.0, 2278.0], [964.0, 2310.0], [963.0, 2389.0], [973.0, 1936.0], [971.0, 2040.0], [970.0, 2087.0], [968.0, 2183.0], [983.0, 1335.25], [982.0, 1498.0], [979.0, 1521.5], [976.0, 1393.4], [997.0, 64893.0], [996.0, 63100.0], [995.0, 74125.0], [994.0, 86924.0], [993.0, 63091.0], [992.0, 96937.0], [1.0, 119856.0]], "isOverall": false, "label": "suggestion products", "isController": false}, {"data": [[500.55400000000014, 49355.478999999985]], "isOverall": false, "label": "suggestion products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 997.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 108.81666666666666, "minX": 1.70302272E12, "maxY": 206474.2, "series": [{"data": [[1.70302296E12, 206474.2], [1.70302284E12, 70979.08333333333], [1.70302302E12, 76043.71666666666], [1.70302272E12, 4565.45], [1.7030229E12, 113941.18333333333], [1.70302308E12, 163727.83333333334], [1.70302278E12, 12104.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70302296E12, 257.5], [1.70302284E12, 476.25], [1.70302302E12, 108.81666666666666], [1.70302272E12, 134.25], [1.7030229E12, 268.01666666666665], [1.70302308E12, 148.6], [1.70302278E12, 1501.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302308E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5291.05, "minX": 1.70302272E12, "maxY": 169019.47826086957, "series": [{"data": [[1.70302284E12, 67762.9268965517], [1.70302272E12, 5728.875], [1.7030229E12, 128127.33333333333], [1.70302278E12, 45808.45454545452]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[1.70302296E12, 40257.15000000001], [1.70302302E12, 91084.17647058824], [1.7030229E12, 5291.05], [1.70302308E12, 169019.47826086957]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[1.70302284E12, 11924.411417322835], [1.70302272E12, 9877.5], [1.7030229E12, 88464.50000000001], [1.70302278E12, 53723.5]], "isOverall": false, "label": "suggestion products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302308E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70302272E12, "maxY": 33498.5256916996, "series": [{"data": [[1.70302284E12, 6004.368275862064], [1.70302272E12, 5728.8125], [1.7030229E12, 0.0], [1.70302278E12, 33498.5256916996]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[1.70302296E12, 9308.749999999998], [1.70302302E12, 23920.41176470588], [1.7030229E12, 2282.3500000000004], [1.70302308E12, 29840.260869565216]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[1.70302284E12, 120.80905511811022], [1.70302272E12, 740.5], [1.7030229E12, 16497.854508196724], [1.70302278E12, 5710.0]], "isOverall": false, "label": "suggestion products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302308E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70302272E12, "maxY": 122199.5, "series": [{"data": [[1.70302284E12, 61785.89241379312], [1.70302272E12, 2832.5], [1.7030229E12, 122199.5], [1.70302278E12, 30671.47826086955]], "isOverall": false, "label": "suggestions searches", "isController": false}, {"data": [[1.70302296E12, 4672.3], [1.70302302E12, 12641.058823529413], [1.7030229E12, 644.8499999999999], [1.70302308E12, 15968.608695652172]], "isOverall": false, "label": "search by categories", "isController": false}, {"data": [[1.70302284E12, 10815.267716535433], [1.70302272E12, 0.0], [1.7030229E12, 39672.70491803277], [1.70302278E12, 0.0]], "isOverall": false, "label": "suggestion products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302308E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 348.0, "minX": 1.70302272E12, "maxY": 184596.0, "series": [{"data": [[1.70302296E12, 72211.0], [1.70302284E12, 113681.0], [1.70302302E12, 123372.0], [1.70302272E12, 21794.0], [1.7030229E12, 182273.0], [1.70302308E12, 184596.0], [1.70302278E12, 67427.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70302296E12, 65890.6], [1.70302284E12, 76804.0], [1.70302302E12, 122272.0], [1.70302272E12, 18001.400000000005], [1.7030229E12, 173876.0], [1.70302308E12, 184291.8], [1.70302278E12, 63164.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70302296E12, 72211.0], [1.70302284E12, 113681.0], [1.70302302E12, 123372.0], [1.70302272E12, 21794.0], [1.7030229E12, 182273.0], [1.70302308E12, 184596.0], [1.70302278E12, 67370.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70302296E12, 71028.74999999999], [1.70302284E12, 95992.25], [1.70302302E12, 123372.0], [1.70302272E12, 21794.0], [1.7030229E12, 182106.5], [1.70302308E12, 184541.8], [1.70302278E12, 64711.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70302296E12, 16543.0], [1.70302284E12, 73962.0], [1.70302302E12, 71851.0], [1.70302272E12, 580.0], [1.7030229E12, 348.0], [1.70302308E12, 136957.0], [1.70302278E12, 23104.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70302296E12, 37194.5], [1.70302284E12, 75088.0], [1.70302302E12, 82811.0], [1.70302272E12, 4635.5], [1.7030229E12, 9781.0], [1.70302308E12, 166840.0], [1.70302278E12, 36875.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302308E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5829.0, "minX": 1.0, "maxY": 182088.0, "series": [{"data": [[2.0, 45004.0], [33.0, 32928.0], [41.0, 67124.5], [42.0, 75066.0], [3.0, 60094.0], [55.0, 98604.0], [4.0, 38638.0], [67.0, 113681.0], [5.0, 39957.0], [6.0, 41187.0], [7.0, 64396.0], [8.0, 37385.0], [9.0, 61469.0], [11.0, 166742.0], [12.0, 149818.0], [13.0, 33019.0], [14.0, 174676.0], [1.0, 45571.0], [16.0, 155648.0], [18.0, 113960.0], [20.0, 80524.5], [21.0, 182088.0], [22.0, 96937.0], [23.0, 132803.0], [27.0, 33048.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 102594.0], [34.0, 31532.5], [38.0, 31541.0], [41.0, 63105.0], [40.0, 63122.0], [42.0, 67489.0], [43.0, 7296.0], [3.0, 99155.5], [52.0, 31547.5], [55.0, 31542.0], [4.0, 63109.0], [67.0, 31535.0], [5.0, 102265.0], [6.0, 68251.0], [7.0, 128272.0], [8.0, 63111.5], [9.0, 90411.0], [10.0, 98983.5], [11.0, 135363.5], [12.0, 133156.0], [13.0, 63124.0], [210.0, 5829.0], [14.0, 63116.0], [15.0, 63113.0], [1.0, 99738.0], [16.0, 63113.0], [17.0, 63110.0], [18.0, 63119.5], [20.0, 63112.0], [21.0, 63132.5], [22.0, 63120.0], [23.0, 63103.0], [25.0, 63091.0], [28.0, 63111.0], [29.0, 63111.0], [30.0, 63135.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 210.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 75066.0, "series": [{"data": [[2.0, 20647.0], [33.0, 32928.0], [41.0, 67124.5], [42.0, 75066.0], [3.0, 36667.5], [55.0, 8097.0], [4.0, 28247.0], [67.0, 167.0], [5.0, 39761.0], [6.0, 41187.0], [7.0, 28361.0], [8.0, 37385.0], [9.0, 61469.0], [11.0, 15982.0], [12.0, 7713.0], [13.0, 33018.0], [14.0, 17744.0], [1.0, 12023.0], [16.0, 13380.0], [18.0, 10831.0], [20.0, 12679.5], [21.0, 1185.0], [22.0, 24810.0], [23.0, 18926.0], [27.0, 33048.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [34.0, 0.0], [38.0, 0.0], [41.0, 0.0], [40.0, 0.0], [42.0, 0.0], [43.0, 0.0], [3.0, 0.0], [52.0, 0.0], [55.0, 0.0], [4.0, 0.0], [67.0, 0.0], [5.0, 0.0], [6.0, 14251.5], [7.0, 10622.5], [8.0, 0.0], [9.0, 18180.5], [10.0, 0.0], [11.0, 36988.5], [12.0, 51601.0], [13.0, 0.0], [210.0, 0.0], [14.0, 0.0], [15.0, 0.0], [1.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [25.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 210.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.7666666666666666, "minX": 1.70302272E12, "maxY": 14.333333333333334, "series": [{"data": [[1.70302284E12, 12.083333333333334], [1.70302272E12, 6.816666666666666], [1.7030229E12, 1.7666666666666666], [1.70302278E12, 14.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7030229E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70302272E12, "maxY": 10.95, "series": [{"data": [[1.70302296E12, 0.6666666666666666], [1.70302284E12, 1.0666666666666667], [1.70302302E12, 0.2833333333333333], [1.70302272E12, 0.3], [1.7030229E12, 0.6166666666666667], [1.70302308E12, 0.38333333333333336], [1.70302278E12, 3.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70302284E12, 1.2666666666666666], [1.70302278E12, 0.8166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.70302284E12, 10.95], [1.7030229E12, 5.1]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.7030229E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.7030229E12, 2.65]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.7030229E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLProtocolException", "isController": false}, {"data": [[1.70302278E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}, {"data": [[1.70302284E12, 7.266666666666667], [1.7030229E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: java.net.UnknownHostException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302308E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70302272E12, "maxY": 11.116666666666667, "series": [{"data": [[1.70302284E12, 11.116666666666667], [1.7030229E12, 0.1], [1.70302278E12, 0.85]], "isOverall": false, "label": "suggestions searches-failure", "isController": false}, {"data": [[1.70302284E12, 0.9666666666666667], [1.70302272E12, 0.26666666666666666], [1.70302278E12, 3.3666666666666667]], "isOverall": false, "label": "suggestions searches-success", "isController": false}, {"data": [[1.70302296E12, 0.6666666666666666], [1.70302302E12, 0.2833333333333333], [1.7030229E12, 0.3333333333333333], [1.70302308E12, 0.38333333333333336]], "isOverall": false, "label": "search by categories-success", "isController": false}, {"data": [[1.70302284E12, 8.366666666666667], [1.7030229E12, 7.85]], "isOverall": false, "label": "suggestion products-failure", "isController": false}, {"data": [[1.70302284E12, 0.1], [1.70302272E12, 0.03333333333333333], [1.7030229E12, 0.2833333333333333], [1.70302278E12, 0.03333333333333333]], "isOverall": false, "label": "suggestion products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302308E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.70302272E12, "maxY": 19.483333333333334, "series": [{"data": [[1.70302296E12, 0.6666666666666666], [1.70302284E12, 1.0666666666666667], [1.70302302E12, 0.2833333333333333], [1.70302272E12, 0.3], [1.7030229E12, 0.6166666666666667], [1.70302308E12, 0.38333333333333336], [1.70302278E12, 3.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70302284E12, 19.483333333333334], [1.7030229E12, 7.95], [1.70302278E12, 0.85]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302308E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

